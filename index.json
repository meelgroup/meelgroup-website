[{"authors":["kuldeep"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1652054400,"objectID":"6836a811b959df96a5d36bc99370f6a8","permalink":"https://meelgroup.github.io/author/kuldeep-s.-meel/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/kuldeep-s.-meel/","section":"authors","summary":"","tags":null,"title":"Kuldeep S. Meel","type":"authors"},{"authors":["mate"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1652054400,"objectID":"6ead0d57894bb8e4262b7b37a25a62bf","permalink":"https://meelgroup.github.io/author/mate-soos/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/mate-soos/","section":"authors","summary":"","tags":null,"title":"Mate Soos","type":"authors"},{"authors":["priya"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1652054400,"objectID":"f00ed1da296ee4ee1748a43ac0671a9b","permalink":"https://meelgroup.github.io/author/priyanka-golia/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/priyanka-golia/","section":"authors","summary":"","tags":null,"title":"Priyanka Golia","type":"authors"},{"authors":["sourav"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1652054400,"objectID":"b62bd3b68c8cc99ea00d0b49df4e7877","permalink":"https://meelgroup.github.io/author/sourav-chakraborty/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/sourav-chakraborty/","section":"authors","summary":"","tags":null,"title":"Sourav Chakraborty","type":"authors"},{"authors":["yash"],"categories":null,"content":"","date":1636243200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1636243200,"objectID":"f1b124628c453afb96fef19904b09325","permalink":"https://meelgroup.github.io/author/yash-pote/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/yash-pote/","section":"authors","summary":"","tags":null,"title":"Yash Pote","type":"authors"},{"authors":["jiong"],"categories":null,"content":"","date":1627430400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1627430400,"objectID":"8963a37d0daa00ca4be720a74e65aece","permalink":"https://meelgroup.github.io/author/jiong-yang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jiong-yang/","section":"authors","summary":"","tags":null,"title":"Jiong Yang","type":"authors"},{"authors":["durgesh"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1619827200,"objectID":"00cbb8b72e81b8d849fb801788c6e5e3","permalink":"https://meelgroup.github.io/author/durgesh-agrawal/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/durgesh-agrawal/","section":"authors","summary":"","tags":null,"title":"Durgesh Agrawal","type":"authors"},{"authors":["jaroslav"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1619827200,"objectID":"d94e8ba5cd706f3e893b5421fc8f05d3","permalink":"https://meelgroup.github.io/author/jaroslav-bendik/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jaroslav-bendik/","section":"authors","summary":"","tags":null,"title":"Jaroslav Bend√≠k","type":"authors"},{"authors":["teodora"],"categories":null,"content":"","date":1610496000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1610496000,"objectID":"fee05b1fa0aa8fc24b6727d5416c2ee0","permalink":"https://meelgroup.github.io/author/teodora-baluta/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/teodora-baluta/","section":"authors","summary":"","tags":null,"title":"Teodora Baluta","type":"authors"},{"authors":["bishwamittra"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1610323200,"objectID":"53e136ef92348e60f27bb86042fe7188","permalink":"https://meelgroup.github.io/author/bishwamittra-ghosh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/bishwamittra-ghosh/","section":"authors","summary":"","tags":null,"title":"Bishwamittra Ghosh","type":"authors"},{"authors":["shubham"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1610323200,"objectID":"1b3d99624a46e0588d0602354bb489fc","permalink":"https://meelgroup.github.io/author/shubham-sharma/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/shubham-sharma/","section":"authors","summary":"","tags":null,"title":"Shubham Sharma","type":"authors"},{"authors":["suwei"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1610323200,"objectID":"aa0bfcd8456004f4b0b0abff6589e31a","permalink":"https://meelgroup.github.io/author/suwei-yang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/suwei-yang/","section":"authors","summary":"","tags":null,"title":"Suwei Yang","type":"authors"},{"authors":["yong"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1610323200,"objectID":"9b53923901e40f707769716b78487fd1","permalink":"https://meelgroup.github.io/author/yong-lai/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/yong-lai/","section":"authors","summary":"","tags":null,"title":"Yong Lai","type":"authors"},{"authors":["rahul"],"categories":null,"content":"","date":1594166400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1594166400,"objectID":"3b86a286746506c90648349bae74fb18","permalink":"https://meelgroup.github.io/author/rahul-gupta/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/rahul-gupta/","section":"authors","summary":"","tags":null,"title":"Rahul Gupta","type":"authors"},{"authors":["arijit"],"categories":null,"content":"","date":1589846400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1589846400,"objectID":"2cacf5a2f81f8dc3b4ce15baaae6814f","permalink":"https://meelgroup.github.io/author/arijit-shaw/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/arijit-shaw/","section":"authors","summary":"","tags":null,"title":"Arijit Shaw","type":"authors"},{"authors":["bhavishya"],"categories":null,"content":"","date":1589846400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1589846400,"objectID":"42879f9b81b84da9ff4c8984b0db0a5b","permalink":"https://meelgroup.github.io/author/bhavishya/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/bhavishya/","section":"authors","summary":"","tags":null,"title":"Bhavishya","type":"authors"},{"authors":["alexis"],"categories":null,"content":"","date":1563580800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1563580800,"objectID":"dee74fc62007afcb62d2ce7739581879","permalink":"https://meelgroup.github.io/author/alexis-de-colnet/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/alexis-de-colnet/","section":"authors","summary":"","tags":null,"title":"Alexis de Colnet","type":"authors"},{"authors":["aditya-shrotri"],"categories":null,"content":"","date":1557014400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1557014400,"objectID":"244ff518d77503be7daa06ef8bc939fb","permalink":"https://meelgroup.github.io/author/aditya-shrotri/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/aditya-shrotri/","section":"authors","summary":"","tags":null,"title":"Aditya Shrotri","type":"authors"},{"authors":["past-visitors"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"7f4377cd261e5ec82f5066f615cf629c","permalink":"https://meelgroup.github.io/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"authors","summary":"","tags":null,"title":"","type":"authors"},{"authors":["aaryan"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"d8c50474fb8438e9b62c2b66615dbc17","permalink":"https://meelgroup.github.io/author/aaryan-gupta/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/aaryan-gupta/","section":"authors","summary":"","tags":null,"title":"Aaryan Gupta","type":"authors"},{"authors":["alexandru"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"1e6cb645fbcecbec3c168716ed64e36f","permalink":"https://meelgroup.github.io/author/alexandru-dinu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/alexandru-dinu/","section":"authors","summary":"","tags":null,"title":"Alexandru Dinu","type":"authors"},{"authors":["anna"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"3cc6056e1d95002c82fe8dfde2d9c63d","permalink":"https://meelgroup.github.io/author/anna-latour/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/anna-latour/","section":"authors","summary":"","tags":null,"title":"Anna Latour","type":"authors"},{"authors":["biswadeep"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"17189819532eb4793c16c353ccd1c6ab","permalink":"https://meelgroup.github.io/author/biswadeep/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/biswadeep/","section":"authors","summary":"","tags":null,"title":"Biswadeep","type":"authors"},{"authors":["gunjan"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"845d668abedc43e4a80db8ef9846ea4a","permalink":"https://meelgroup.github.io/author/gunjan-kumar/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/gunjan-kumar/","section":"authors","summary":"","tags":null,"title":"Gunjan Kumar","type":"authors"},{"authors":["elffers"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"0903353a19eabf8fc1a0c22bf3c34fed","permalink":"https://meelgroup.github.io/author/jan-elferrs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jan-elferrs/","section":"authors","summary":"","tags":null,"title":"Jan Elferrs","type":"authors"},{"authors":["lawqueen"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"de0d97cf96067b09dbd88e624d8f2e26","permalink":"https://meelgroup.github.io/author/lawqueen-kanesh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/lawqueen-kanesh/","section":"authors","summary":"","tags":null,"title":"Lawqueen Kanesh","type":"authors"},{"authors":["marius"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"9ca11ffd47fba8bba1cc08826c98528b","permalink":"https://meelgroup.github.io/author/marius-belly/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/marius-belly/","section":"authors","summary":"","tags":null,"title":"Marius Belly","type":"authors"},{"authors":["group"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"3d4d5e14ee766925debc0cd6588cd11b","permalink":"https://meelgroup.github.io/author/meel-group/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/meel-group/","section":"authors","summary":"","tags":null,"title":"Meel Group","type":"authors"},{"authors":["mihir"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"edf777a8fef669df58f3aba3e859be92","permalink":"https://meelgroup.github.io/author/mihir-j-vahanwala/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/mihir-j-vahanwala/","section":"authors","summary":"","tags":null,"title":"Mihir J Vahanwala","type":"authors"},{"authors":["mahi"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"774d33b1d78c65cd796accf56b45c37c","permalink":"https://meelgroup.github.io/author/mohimenul-kabir/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/mohimenul-kabir/","section":"authors","summary":"","tags":null,"title":"Mohimenul Kabir","type":"authors"},{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://meelgroup.github.io/author/nelson-bighetti/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nelson-bighetti/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":["pavan-aduri"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"96a84401bb71e4fe590a25b0712f0f28","permalink":"https://meelgroup.github.io/author/pavan-aduri/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/pavan-aduri/","section":"authors","summary":"","tags":null,"title":"Pavan Aduri","type":"authors"},{"authors":["jhjiang"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"238256bd69cad6d05adfa4921b0b5925","permalink":"https://meelgroup.github.io/author/roland-jie-hong/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/roland-jie-hong/","section":"authors","summary":"","tags":null,"title":"Roland Jie-Hong","type":"authors"},{"authors":["remi"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"fe03adf72037321e9c8881ec6b142261","permalink":"https://meelgroup.github.io/author/remi-delannoy/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/remi-delannoy/","section":"authors","summary":"","tags":null,"title":"R√©mi Delannoy","type":"authors"},{"authors":["souptik"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"78406d2d9317a8687953bf63d6e7f41f","permalink":"https://meelgroup.github.io/author/souptik-halder/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/souptik-halder/","section":"authors","summary":"","tags":null,"title":"Souptik Halder","type":"authors"},{"authors":["gocht"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"e0371580e095390556ec87ff1fb4024f","permalink":"https://meelgroup.github.io/author/stephan-gocht/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/stephan-gocht/","section":"authors","summary":"","tags":null,"title":"Stephan Gocht","type":"authors"},{"authors":["vignesh"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"bf28e0b2550436bcd9acb92b5e9a5f0a","permalink":"https://meelgroup.github.io/author/vignesh-sivaraman/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/vignesh-sivaraman/","section":"authors","summary":"","tags":null,"title":"Vignesh Sivaraman","type":"authors"},{"authors":["vganesh"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"8f9e27c1ac53e40e84fa445b050da01f","permalink":"https://meelgroup.github.io/author/vijay-ganesh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/vijay-ganesh/","section":"authors","summary":"","tags":null,"title":"Vijay Ganesh","type":"authors"},{"authors":["pang"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"14d8087351dde1e18a747dbc4af80cdc","permalink":"https://meelgroup.github.io/author/zhanzhong-pang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/zhanzhong-pang/","section":"authors","summary":"","tags":null,"title":"Zhanzhong Pang","type":"authors"},{"authors":null,"categories":null,"content":"","date":1652076900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652076900,"objectID":"390d5c667c25d6af62988e07babb0632","permalink":"https://meelgroup.github.io/talk/09052022/","publishdate":"2022-05-09T13:15:00+07:00","relpermalink":"/talk/09052022/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on A Scalable Shannon Entropy Estimator is accepted to  \u003ca href=\"http://i-cav.org/2022/\"\u003eCAV-22\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e We propose the first efficient algorithmic technique to estimate the Shannon entropy of a specification with PAC-style guarantees, i.e., the computed estimate is guaranteed to lie within a (1 ¬± Œµ)-factor of the ground truth with confidence at least 1‚àíŒ¥. \u003cbr\u003eAuthors:  Priyanka Golia, Brendan Juba, Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":["Priyanka Golia","Brendan Juba","Kuldeep S. Meel"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652054400,"objectID":"b56358de64f274ecbeaac0cbe6933807","permalink":"https://meelgroup.github.io/publication/cav22/","publishdate":"2022-05-09T00:00:00Z","relpermalink":"/publication/cav22/","section":"publication","summary":"Quantified information flow (QIF) has emerged as a rigorous approach to quantitatively measure confidentiality; the information-theoretic underpinning of QIF allows the end-users to link the computed quantities with the computational effort required on the part of the adversary to gain access to desired confidential information. In this work, we focus on the estimation of Shannon entropy for a given program Œ†. As a first step, we focus on the case wherein a Boolean formula œÜ(X, Y ) captures the relationship between inputs X and output Y of Œ†. Such formulas œÜ(X, Y ) have the property that for every valuation to X, there exists exactly one valuation to Y such that œÜ is satisfied. The existing techniques require O(2 m ) model counting queries, where m = |Y |. We propose the first efficient algorithmic technique, called EntropyEstimation to estimate the Shannon entropy of œÜ with PAC-style guarantees, i.e., the computed estimate is guaranteed to lie within a (1 ¬± Œµ)-factor of the ground truth with confidence at least 1‚àíŒ¥. Furthermore, EntropyEstimation makes only O( min(m,n)) counting and sampling queries, where m = |Y |, and n = |X|, thereby achieving a significant reduction in the number of model counting queries. We demonstrate the practical efficiency of our algorithmic framework via a detailed experimental evaluation. Our evaluation demonstrates that the proposed framework scales to the formulas beyond the reach of the previously known approaches.","tags":null,"title":"A Scalable Shannon Entropy Estimator","type":"publication"},{"authors":["Mate Soos","Priyanka Golia","Sourav Chakraborty","Kuldeep S. Meel"],"categories":null,"content":"","date":1652054400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652054400,"objectID":"5ef7dfe1bf9293458e479894c0e202e0","permalink":"https://meelgroup.github.io/publication/cp22/","publishdate":"2022-05-09T00:00:00Z","relpermalink":"/publication/cp22/","section":"publication","summary":"The problem of uniform sampling is, given a formula F , sample solutions of F uniformly atrandom from the solution space of F . Uniform sampling is a fundamental problem with widespread applications, including configuration testing, bug synthesis, function synthesis, and many more. State-of-the-art approaches for uniform sampling have a trade-off between scalability and theoretical guarantees. Many state of the art uniform samplers do not provide any theoretical guarantees on the distribution of samples generated, however, empirically they have shown promising results. In such cases, the main challenge is to test whether the distribution according to which samples are generated is indeed uniform or not. Recently, Chakraborty and Meel (2019) designed the first scalable sampling tester, Barbarik, based on a grey-box sampling technique for testing if the distribution, according to which the given sampler is sampling, is close to the uniform or far from uniform. They were able to show that many off-the-self samplers are far from a uniform sampler. The availability of Barbarik increased the test-driven development of samplers. More recently, Golia, Soos, Chakraborty and Meel (2021), designed a uniform like sampler, CMSGen, which was shown to be accepted by Barbarik on all the instances. However, CMSGen does not provide any theoretical analysis of the sampling quality. CMSGen leads us to observe the need for a tester to provide a quantitative answer to determine the quality of underlying samplers instead of merely a qualitative answer of Accept or Reject. Towards this goal, we design a computational hardness-based tester ScalBarbarik that provides a more nuanced analysis of the quality of a sampler. ScalBarbarik allows more expressive measurement of the quality of the underlying samplers. We empirically show that the state-of-the-art sampler, CMSGen is not accepted as a uniform-like sampler by ScalBarbarik. Furthermore, we show that ScalBarbarik can be used to design a sampler that can achieve balance between scalability and uniformity.","tags":null,"title":"On Quantitative Testing of Samplers","type":"publication"},{"authors":null,"categories":null,"content":"","date":1651990500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651990500,"objectID":"5f6425bac4d34c443784cc4d7ecae862","permalink":"https://meelgroup.github.io/talk/08052022/","publishdate":"2022-05-08T13:15:00+07:00","relpermalink":"/talk/08052022/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work On Quantitative Testing of Samplers has been accepted to  \u003ca href=\"https://cp2022.a4cp.org\"\u003eCP-22\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e We design a computational hardness-based tester, called ScalBarbarik that provides a qunatitative way to analysis the quality of a sampler.\u003cbr\u003e Authors: Mate Soos, Priyanka Golia, Sourav Chakraborty, Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1640019600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640019600,"objectID":"47f66ec880e7973462ea773197fe5eed","permalink":"https://meelgroup.github.io/talk/21122021/","publishdate":"2021-12-21T00:00:00+07:00","relpermalink":"/talk/21122021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on \"Efficient Learning of Interpretable Classification Rules\" is accepted to \u003ca href=\"https://www.jair.org/index.php/jair\"\u003eJAIR\u003c/a\u003e journal.\u003c/b\u003e\u003cbr\u003e Authors: Bishwamittra Ghosh, Dmitry Malioutov and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1638464400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638464400,"objectID":"dcb602b1756fafc0e9e9289ee78ff35c","permalink":"https://meelgroup.github.io/talk/03122021/","publishdate":"2021-12-03T00:00:00+07:00","relpermalink":"/talk/03122021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper ‚ÄúA Scalable t-wise Coverage Estimator‚Äù is accepted to. \u003ca href=\"https://conf.researchr.org/home/icse-2022\"\u003e ICSE 2022\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Eduard Baranov, Sourav Chakraborty, Axel Legay, Kuldeep S. Meel, and N.V. Vinodchandran","type":"talk"},{"authors":null,"categories":null,"content":"","date":1638378000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638378000,"objectID":"6f437687b17c911aa2d4a61290ae1d61","permalink":"https://meelgroup.github.io/talk/02122021/","publishdate":"2021-12-02T00:00:00+07:00","relpermalink":"/talk/02122021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eThree Papers accepted to \u003ca href=\"https://aaai.org/Conferences/AAAI-22/\"\u003eAAAI 2022\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e1. The first paper is on Algorithmic Fairness Verification with Graphical Models. \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;  Authors: Bishwamittra Ghosh, Debabrota Basu and Kuldeep S. Meel\u003c/br\u003e 2. The second paper is ApproxASP - A Scalable Approximate Answer Set Counter. \u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Mohimenul Kabir , Flavio Everardo, Ankit Shukla, Johannes K. Fichte, Markus Hecher and Kuldeep Meel\u003c/br\u003e 3. The third paper is on Constraint-Driven Explanations for Black Box ML Models. \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Aditya Shrotri, Nina Narodytska, Alexey Ignatiev, Joao Marques-Silva, Kuldeep S. Meel and Moshe Vardi","type":"talk"},{"authors":["Mate Soos","Kuldeep S. Meel"],"categories":null,"content":"","date":1636416000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636416000,"objectID":"286540e45124ee3119c912cce559bc90","permalink":"https://meelgroup.github.io/publication/kr21/","publishdate":"2021-11-09T00:00:00Z","relpermalink":"/publication/kr21/","section":"publication","summary":"Given a set of constraints F and a weight function W over the assignments, the problem of MaxSAT is to compute a maximum weighted solution of F. MaxSAT is a fundamental problem with applications in numerous areas. The success of MaxSAT solvers has prompted researchers in AI and formal methods communities to develop algorithms that can use MaxSAT solver as oracle. One such problem that stands to benefit from advances in MaxSAT solving is discrete integration. Recently, Ermon et al. achieved a significant breakthrough by reducing the problem of integration to polynomially many queries to an optimization oracle where F is conjuncted with randomly chosen XOR constraints. The primary contribution of this paper is a new MaxSAT solver, GaussMaxHS, with built-in XOR support. The architecture of GaussMaxHS is inspired by CryptoMiniSat, which has been the workhorse of hashing-based approximate model counting techniques. Our solver, GaussMaxHS, outperforms MaxHS over 9628 benchmarks arising from spin glass models and network reliability domains. In particular, with a timeout of 5000 seconds, MaxHS could solve only 5473 benchmarks while GaussMaxHS could solve 6120 benchmarks.","tags":null,"title":"Gaussian Elimination Meets Maximum Satisfiability","type":"publication"},{"authors":["Yash Pote","Kuldeep S. Meel"],"categories":null,"content":"","date":1636243200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636243200,"objectID":"a615d4851c0f8dc7cb37a23f1a608f8a","permalink":"https://meelgroup.github.io/publication/neurips21_teq/","publishdate":"2021-11-07T00:00:00Z","relpermalink":"/publication/neurips21_teq/","section":"publication","summary":"Probabilistic circuits (PCs) are a powerful modeling framework for representing tractable probability distributions over combinatorial spaces. In machine learning and probabilistic programming, one is often interested in understanding whether the distributions learned using PCs are close to the desired distribution. Thus, given two probabilistic circuits, a fundamental problem of interest is to determine whether their distributions are close to each other.\nThe primary contribution of this paper is a closeness test for PCs with respect to the total variation distance metric. Our algorithm utilizes two common PC queries, counting and sampling. In particular, we provide a poly-time probabilistic algorithm to check the closeness of two PCs, when the PCs support tractable approximate counting and sampling. We demonstrate the practical efficiency of our algorithmic framework via a detailed experimental evaluation of a prototype implementation against a set of 375 PC benchmarks. We find that our test correctly decides the closeness of all 375 PCs within 3600 seconds. ","tags":null,"title":"Testing Probabilistic Circuits","type":"publication"},{"authors":null,"categories":null,"content":"","date":1636218000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636218000,"objectID":"1a98ff371b4da26ce98c9f190c2cdbf9","permalink":"https://meelgroup.github.io/talk/07112021/","publishdate":"2021-11-07T00:00:00+07:00","relpermalink":"/talk/07112021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on \u003ca href=\"/files/publications/NeurIPS21_PCtest.pdf\"\u003eTesting of Probabilistic Cirucits\u003c/a\u003e is accepted to \u003ca href=\"https://nips.cc/\"\u003eNeurIPS 2021\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Yash Pote and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1635578100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635578100,"objectID":"29749e0b85d7c0ca68f7c9154f87daa3","permalink":"https://meelgroup.github.io/talk/24092021/","publishdate":"2021-10-30T14:15:00+07:00","relpermalink":"/talk/24092021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eCongratulations to Teodora Baluta for winning the \u003ca href=\"https://research.google/outreach/phd-fellowship/recipients/?category=2021\"\u003eGoogle PhD Fellowship\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":["Jiong Yang","Kuldeep S. Meel"],"categories":null,"content":"","date":1627430400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627430400,"objectID":"71c8888091aec1d209beb2d9113e907e","permalink":"https://meelgroup.github.io/publication/cp21/","publishdate":"2021-07-28T00:00:00Z","relpermalink":"/publication/cp21/","section":"publication","summary":"Despite the NP-completeness of Boolean satisfiability, modern SAT solvers are routinely able to handle large practical instances, and consequently have found wide ranging applications. The primary workhorse behind the success of SAT solvers is the widely acclaimed Conflict Driven Clause Learning (CDCL) paradigm, which was originally proposed in the context of Boolean formulas in CNF. The wide ranging applications of SAT solvers have highlighted that for several domains, CNF is not a natural representation and the reliance of modern SAT solvers on resolution proof system limit their ability to efficiently solve several families of constraints. Consequently, the past decade has witnessed the design of solvers with native support for constraints such as Pseudo-Boolean (PB) and CNF-XOR. The primary contribution of our work is an efficient solver engineered for PB-XOR formulas, i.e., formulas consisting of a conjunction of PB and XOR constraints. We first observe that a simple adaption of CNF-XOR architecture does not provide an improvement over baseline; our analysis highlights the need for careful engineering of the order of propagations. To this end, we propose three different tactics, all of which achieve significant performance improvements over the baseline. Our work is motivated by applications arising from binarized neural network verification where the verification of properties such as robustness, fairness, trojan attacks can be reduced to model counting queries; the state of the art model counters reduce counting to polynomially many SAT queries over the original formula conjuncted with randomly generated XOR constraints. To this end, we augment ApproxMC with LinPB and we call the resulting counter as ApproxMCPB. In an extensive empirical comparison over 1076 benchmarks, we observe that ApproxMCPB can solve 912 instances while the baseline version of ApproxMC4 (augmented with CryptoMiniSat) can solve only 802 instances.","tags":null,"title":"Engineering an Efficient PB-XOR Solver","type":"publication"},{"authors":null,"categories":null,"content":"","date":1627405200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627405200,"objectID":"558bfb63cbed672ccb138dcc157639e8","permalink":"https://meelgroup.github.io/talk/28072021/","publishdate":"2021-07-28T00:00:00+07:00","relpermalink":"/talk/28072021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on \u003ca href=\"/files/publications/CP21.pdf\"\u003eEngineering an Efficient PB-XOR Solver\u003c/a\u003e is accepted to \u003ca href=\"https://cp2021.a4cp.org/\"\u003eCP 2021\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Jiong Yang and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1626246900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626246900,"objectID":"e150e4a9dda300e51882d8bd5e14ecad","permalink":"https://meelgroup.github.io/talk/14072021/","publishdate":"2021-07-14T14:15:00+07:00","relpermalink":"/talk/14072021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper Engineering an Efficient Boolean Functional Synthesis Engine has been accepted to \u003ca href=\"https://www.iccad.com/index.php\"\u003eICCAD 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e The work addresses scalability barriers faced by the current state-of-the-art synthesis techniques. We propose four algorithmic improvements for a data-driven framework for functional synthesis.\u003cbr\u003e Authors:  Priyanka Golia, Friedrich Slivovsky, Subhajit Roy, Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":["Priyanka Golia","Friedrich Slivovsky","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1626134400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626134400,"objectID":"6a054600663c713613ac2737b1d21ed7","permalink":"https://meelgroup.github.io/publication/iccad21/","publishdate":"2021-07-13T00:00:00Z","relpermalink":"/publication/iccad21/","section":"publication","summary":"Given a Boolean specification between a set of inputs and outputs, the problem of Boolean functional synthesis is to synthesise each output as a function of inputs such that the specification is met. Although the past few years have witnessed intense algorithmic development, accomplishing scalability remains the holy grail. The state-of-the-art approach combines machine learning and automated reasoningto synthesise Boolean functions efficiently. In this paper, we propose fouralgorithmic improvements for a data-driven framework for functional synthesis: using a dependency-driven multi-classifier to learn candidatefunction, extracting uniquely defined functions by interpolation, variables retention, and using lexicographic MaxSAT to repair candidates. We implement these improvements in the state-of-the-art framework, called Manthan. The proposed framework is called Manthan2. Manthan2 shows significantly improved runtime performance compared to Manthan. In an extensive experimental evaluation on 609 benchmarks, Manthan2 is able to synthesise a Boolean function vector for 509 instances compared to 356 instances solved by Manthan ‚Äì an increment of 153 instances over the state-of-the-art. To put this into perspective, Manthan improved on the prior state-of-the-art by only 76 instances.","tags":null,"title":"Engineering an Efficient Boolean Functional Synthesis Engine","type":"publication"},{"authors":null,"categories":null,"content":"","date":1625814900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625814900,"objectID":"6d8576abb9e2c88d2c5a8291f2db7a11","permalink":"https://meelgroup.github.io/talk/09072021/","publishdate":"2021-07-09T14:15:00+07:00","relpermalink":"/talk/09072021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper Designing Samplers is Easy: The Boon of Testers has been accepted to \u003ca href=\"https://fmcad.org/FMCAD21/\"\u003eFMCAD 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e Our Sampler not only passes the tests of Barbarik but also leads to significant performance improvements for real-world instances. \u003cbr\u003e Authors: Priyanka Golia, Mate Soos, Sourav Chakraborty, Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":["Priyanka Golia","Mate Soos","Sourav Chakraborty","Kuldeep S. Meel"],"categories":null,"content":"","date":1625788800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625788800,"objectID":"1d7e1c3414c529af76ff3a3fb183c695","permalink":"https://meelgroup.github.io/publication/fmcad21/","publishdate":"2021-07-09T00:00:00Z","relpermalink":"/publication/fmcad21/","section":"publication","summary":"Given a formula the problem of uniform sampling seeks to sample solutions of uniformly at random. Uniform sampling is a fundamental problem with a wide variety of applications. The computational intractability of uniform sampling has led to the development of several samplers that heavily rely on heuristics and are not accompanied by theoretical analysis of their distribution. Recently, Chakraborty and Meel (2019) designed the first scalable sampling tester, Barbarik, based on a grey-box sampling technique for testing if the distribution, according to which the given sampler is sampling, is close to the uniform or far from uniform. While the theoretical analysis of Barbarik provides only unconditional soundness guarantees, the empirical evaluation of Barbarik did show its success in determining that some of the off-the-shelf samplers were far from a uniform sampler. The availability of Barbarik has the potential to spur development of samplers and testing techniques such that developers can design sampling methods that can be accepted by Barbarik even though these samplers may not be amenable to a detailed mathematical analysis. In this paper, we present the realization of this aforementioned promise. Based on the flexibility offered by CryptoMiniSat, we design a sampler CMSGen that promises the achievement of sweet spot of the quality of distributions and runtime performance. In particular, CMSGen achieves significant runtime performance improvement over the existing samplers. We conduct two case studies, and demonstrate that the usage of CMSGen leads to significant runtime improvements in the context of combinatorial testing and functional synthesis. A salient strength of our work is the simplicity of CMSGen, which stands in contrast to complicated algorithmic schemes developed in the past that fail to attain desired quality of distributions with practical runtime performance.","tags":null,"title":"Designing Samplers is Easy: The Boon of Testers","type":"publication"},{"authors":null,"categories":null,"content":"","date":1623741300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1623741300,"objectID":"bf9ce9dedaaba1d0ffbe1ca34f9b859b","permalink":"https://meelgroup.github.io/talk/15062021/","publishdate":"2021-06-15T14:15:00+07:00","relpermalink":"/talk/15062021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on MaxSAT augmented with Gauss Jordan Elimination is accepted to \u003ca href=\"https://kr2021.kbsg.rwth-aachen.de/\"\u003eKR2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e Authors: Mate Soos and Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1620112500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620112500,"objectID":"e35990e139ade4f27c4b7efdfcc4a7ca","permalink":"https://meelgroup.github.io/talk/04052021/","publishdate":"2021-05-04T14:15:00+07:00","relpermalink":"/talk/04052021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on GPU-based Parallel SAT solving is accepted to \u003ca href=\"https://www.iiia.csic.es/sat2021/program/\"\u003eSAT 2021\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Nicolas Prevot, Mate Soos, and Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":["Jaroslav Bendik","Kuldeep S. Meel"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"b2f83b099509da7920c04bb52dbec031","permalink":"https://meelgroup.github.io/publication/cav21_mus/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/cav21_mus/","section":"publication","summary":"Given an unsatisfiable Boolean formula F in CNF, an unsatisfiable subset of clauses U of F is called Minimal Unsatisfiable Subset (MUS) if every proper subset of U is satisfiable. Since MUSes serve as explanations for the unsatisfiability of F, MUSes find applications in a wide variety of domains. The availability of efficient SAT solvers has aided the development of scalable techniques for finding and enumerating MUSes in the past two decades. Building on the recent developments in the design of scalable model counting techniques for SAT, Bendik and Meel initiated the study of MUS counting techniques. They succeeded in designing the first approximate MUS counter, AMUSIC, that does not rely on exhaustive MUS enumeration. AMUSIC, however, suffers from two shortcomings: the lack of exact estimates and limited scalability due to its reliance on 3-QBF solvers. In this work, we address the two shortcomings of AMUSIC by designing the first exact MUS counter, CountMUST, that does not rely on exhaustive enumeration. CountMUST circumvents the need for 3-QBF solvers by reducing the problem of MUS counting to projected model counting. While projected model counting is #NP-hard, the past few years have witnessed the development of scalable projected model counters. An extensive empirical evaluation demonstrates that CountMUST successfully returns MUS count for 1500 instances while AMUSIC and enumeration-based techniques could only handle up to 833 instances.","tags":null,"title":"Counting Minimal Unsatisfiable Subsets","type":"publication"},{"authors":["Nicolas Prevot","Mate Soos","Kuldeep S. Meel"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"983053f8001aa6226480da3aae3263d6","permalink":"https://meelgroup.github.io/publication/sat21_gpu/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/sat21_gpu/","section":"publication","summary":"The past two decades have witnessed an unprecedented improvement in runtime performance of SAT solvers owing to clever software engineering and creative design of data structure. Yet, most entries in the annual SAT competition retain the core architecture of MiniSat, which was designed from the perspective of single core CPU architectures. On the other hand, since 2005, there has been a significant shift to heterogeneous architectures owing to the impending end of Dennard scaling. Consequently, it is no coincidence that the recent breakthroughs in computer science have significantly utilized opportunities offered by such heterogeneous architectures. The primary contribution of this work is a novel multi-threaded CDCL-based framework, called GpuShareSat, designed to take advantage of CPU+GPU achitecture. The core underlying principle of our approach is to divide the tasks among CPU and GPU so as to attempt to achieve the best of both worlds. We observe that efficient bit-vector based operations can allow a GPU to efficiently determine the usefulness of a learnt clause to different threads and accordingly notifies the thread of the presence of relevant clauses in different threads. The approach of checking all clauses against all different assignments from different threads allows the GPU to exploit its potential for massive parallelism through clever group-testing strategy and bitwise operations. Our setup efficiently distributes the work between the CPU and the GPU, each performing the task they are best at to further the speed of parallel SAT solving. To demonstrate the practical efficiency of our framework, we augment the state of the art multi-threaded solvers glucose-syrup with GpuShareSat and perform detailed analysis on benchmarks from SAT 2020 competition. Our empirical analysis demonstrates that augmentation of glucose-syrup augmented with GpuShareSat solves 22 more instances than glucose-syrup alone.","tags":null,"title":"Leveraging GPUs for Effective Clause Sharing in Parallel SAT Solving","type":"publication"},{"authors":["Gilles Pesant","Kuldeep S. Meel","Mahshid Mohammadalitajrishi"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"8123a0d43e33dfeefae8270ccd17b0bf","permalink":"https://meelgroup.github.io/publication/cpaior21_linmodar/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/cpaior21_linmodar/","section":"publication","summary":"Linear modular constraints are a powerful class of constraints that arise naturally in cryptanalysis, checksums, hash functions, and the like. Given their importance, the past few years have witnessed the design of combinatorial solvers with native support for linear modular constraints, and the availability of such solvers has led to the emergence of new applications. While there exist global constraints in CP that consider congruence classes over domain values, linear modular arithmetic constraints have yet to appear in the global constraint catalogue despite their past investigation in the context of model counting for CSPs. In this work we seek to remedy the situation by advocating the integration of linear modular constraints in state-of-the-art CP solvers. Contrary to previous belief, we conclude from an empirical investigation that Gauss-Jordan Elimination based techniques can provide an efficient and scalable way to handle linear modular constraints. On the theoretical side, we remark on the pairwise independence offered by hash functions based on linear modular constraints, and then discuss the design of hashing-based model counters for CP, supported by empirical results showing the accuracy and computational savings that can be achieved. We further demonstrate the usefulness of native support for linear modular constraints with applications to checksums and model counting.","tags":null,"title":"On the Usefulness of Linear Modular Arithmetic in Constraint Programming","type":"publication"},{"authors":["Durgesh Agrawal","Yash Pote","Kuldeep S. Meel"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"2d6bd7938a5019f053ee5ddc53fdf1fb","permalink":"https://meelgroup.github.io/publication/ijcai21_partition/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/ijcai21_partition/","section":"publication","summary":"Probabilistic graphical models have emerged as a powerful modeling tool for several real-world scenarios where one needs to reason under uncertainty. A graphical model\u0026apos;s partition function is a central quantity of interest, and its computation is key to several probabilistic reasoning tasks. Given the #P-hardness of computing the partition function, several techniques have been proposed over the years with varying guarantees on the quality of estimates and their runtime behavior. This paper seeks to present a survey of 17 techniques and a rigorous empirical study of their behavior across an extensive set of benchmarks. Our empirical study draws up a surprising observation: exact techniques are as efficient as the approximate ones, and therefore, we conclude with an optimistic view of opportunities for the design of approximate techniques with enhanced scalability. Motivated by the observation of an order of magnitude difference between the Virtual Best Solver and the best performing tool, we envision an exciting line of research focused on the development of portfolio solvers.","tags":null,"title":"Partition Function Estimation: A Quantitative Study","type":"publication"},{"authors":null,"categories":null,"content":"","date":1619766900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619766900,"objectID":"916691ce633b0ea35a917300b95832ab","permalink":"https://meelgroup.github.io/talk/30042021/","publishdate":"2021-04-30T14:15:00+07:00","relpermalink":"/talk/30042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on Program Synthesis as Dependency Quantified Formula Modulo Theory has been accepted to \u003ca href=\"https://ijcai-21.org/\"\u003eIJCAI 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003eWe show that theory-constrained synthesis can be reduced DQF(T), i.e., to the problem of finding a witness of a dependency quantified formula modulo theory. \u003cbr\u003e Authors: Priyanka Golia, Subhajit Roy, Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":["Priyanka Golia","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1619740800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619740800,"objectID":"13cad03cb2602a2c6b301930bfc19659","permalink":"https://meelgroup.github.io/publication/ijcai21_programsynthesis/","publishdate":"2021-04-30T00:00:00Z","relpermalink":"/publication/ijcai21_programsynthesis/","section":"publication","summary":"Given a specification œÜ(X, Y ) over inputs X and output Y , defined over a background theory T, the problem of program synthesis is to design a program f such that Y = f (X) satisfies the specification œÜ. Over the past decade, syntax-guided synthesis (SyGuS) has emerged as a dominant approach to program synthesis where in addition to the specification œÜ, the end-user also specifies a grammar L to aid the underlying synthesis engine. This paper investigates the feasibility of synthesis techniques without grammar, a sub-class defined as T-constrained synthesis. We show that T-constrained synthesis can be reduced to DQF(T), i.e., to the problem of finding a witness of a dependency quantified formula modulo theory. When the underlying theory is bitvectors, the corresponding DQF problem can be further reduced to Dependency Quantified Boolean Formulas (DQBF). We rely on the progress in DQBF solving to design DQBF-based synthesizers that outpeform the domain-specific program synthesis techniques, thereby positioning DQBF as a core representation language for program synthesis. Our empirical analysis shows that T-constrained synthesis can achieve significantly better scalability than syntax-guided approaches. Furthermore, the general purpose DQBF solvers perform on par with domain-specific synthesis techniques.","tags":null,"title":"Program Synthesis as Dependency Quantified Formula Modulo Theory","type":"publication"},{"authors":null,"categories":null,"content":"","date":1618989300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618989300,"objectID":"f64962b570d41cffeb3f247e5075e051","permalink":"https://meelgroup.github.io/talk/21042021/","publishdate":"2021-04-21T14:15:00+07:00","relpermalink":"/talk/21042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on Counting Minimal Unsatisfiable Subsets is accepted to  \u003ca href=\"http://i-cav.org/2021/\"\u003eCAV 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e Authors: Jaroslav Bendik and Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1618902900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618902900,"objectID":"04581c9334d50727c9a33f0f99bd6331","permalink":"https://meelgroup.github.io/talk/20042021/","publishdate":"2021-04-20T14:15:00+07:00","relpermalink":"/talk/20042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep presented a talk on the rise of model counting at the \u003ca href=\"https://ml-logic-seminar.github.io/\"\u003eData and Knowledge Seminar at Oxford\u003c/a\u003e.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1618816500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618816500,"objectID":"654abe5cb111fa298a3756643d1476c1","permalink":"https://meelgroup.github.io/talk/19042021/","publishdate":"2021-04-19T14:15:00+07:00","relpermalink":"/talk/19042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper Partition Function Estimation: A Quantitative Study has been accepted to \u003ca href=\"https://ijcai-21.org/\"\u003eIJCAI 2021 Survey Track\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003eThis paper presents a survey of 17 partition function estimation techniques and a rigorous empirical study of their behavior across an extensive set of benchmarks.\u003cbr\u003e Authors: Durgesh Agrawal, Yash Pote, and Kuldeep S. Meel\u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1618470900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618470900,"objectID":"8abb04e5730d27e80af9923211d67da2","permalink":"https://meelgroup.github.io/talk/15042021/","publishdate":"2021-04-15T14:15:00+07:00","relpermalink":"/talk/15042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep gave a talk on Formal Methods+Machine Learning at \u003ca href=\"https://cci.usc.edu/index.php/2021/04/13/4863/\"\u003eCCI MHI Seminars at USC\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":null,"categories":null,"content":"","date":1617347700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617347700,"objectID":"286a3d1486fa6ab78bc12767cce049d8","permalink":"https://meelgroup.github.io/talk/02042021/","publishdate":"2021-04-02T14:15:00+07:00","relpermalink":"/talk/02042021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on computation of union of sets in streaming model is accepted to  \u003ca href=\"https://2021.sigmod.org/calls_papers_pods_research.shtml\"\u003ePODS-21\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e Authors: Kuldeep S. Meel, N.V.Vinodchandran, and Sourav Chakraborty \u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1616570100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1616570100,"objectID":"4de450a10269f047b2e40197c799b8f0","permalink":"https://meelgroup.github.io/talk/24032021/","publishdate":"2021-03-24T14:15:00+07:00","relpermalink":"/talk/24032021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep gave a talk on Formal Methods+Machine Learning at the \u003ca href=\"https://madpl.cs.wisc.edu/pl-seminar/\"\u003ePL Seminar at University of Wisconsin\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":null,"categories":null,"content":"","date":1615792500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1615792500,"objectID":"c2f21d1cfa7d65b37ad3dec979a382da","permalink":"https://meelgroup.github.io/talk/15032021/","publishdate":"2021-03-15T14:15:00+07:00","relpermalink":"/talk/15032021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep gave a talk on Formal Methods+Machine Learning at \u003ca href=\"https://ml-logic-seminar.github.io/\"\u003eWaterloo\u0026apos;s ML+Logic Seminar\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":null,"categories":null,"content":"","date":1615619700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1615619700,"objectID":"046c5cf19c0812f41b5df9bb2a28c320","permalink":"https://meelgroup.github.io/talk/13032021/","publishdate":"2021-03-13T14:15:00+07:00","relpermalink":"/talk/13032021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur work on Linear Modular Arithmetic in CP is accepted to  \u003ca href=\"https://cpaior2021.dbai.tuwien.ac.at/\"\u003eCPAIOR-21\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e Authors: Gilles Pesant, Kuldeep S. Meel, and Mahshid Mohammadalitajrishi\u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1614582900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614582900,"objectID":"d83b1ec98ee08353c41a6576631381c6","permalink":"https://meelgroup.github.io/talk/01032021/","publishdate":"2021-03-01T14:15:00+07:00","relpermalink":"/talk/01032021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep will present a talk on synthesis at the \u003ca href=\"https://citris-uc.org/event/cpar-seminar-series-kuldeep-meel/\"\u003eCITRIS People and Robotics seminar\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":["Kuldeep Meel","N.V. Vinodchandran","Sourav Chakraborty"],"categories":null,"content":"","date":1613606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613606400,"objectID":"bd4418c57e9451a8d3ef01e6c9371439","permalink":"https://meelgroup.github.io/publication/pods21_union/","publishdate":"2021-02-18T00:00:00Z","relpermalink":"/publication/pods21_union/","section":"publication","summary":"In this paper we study the problem of estimating the size of the union of sets $S_1, \\dots, S_M$ where each set $S_i \\subseteq \\Omega$ (for some discrete universe $\\Omega$) is implicitly presented and comes in a streaming fashion. We define the notion of Delphic sets to capture the class of streaming problems where membership, sampling, and counting calls are efficient. In particular, we show our notion of Delphic sets capture three well-known problems: Klee's measure, test coverage estimation, and model counting of DNF formulas. The Klee's measure problem corresponds to computation of volume of multi-dimension axis aligned rectangles, i.e., every $d$-dimension axis-aligned rectangle can be defined as $[a_1,b_1] \\times [a_2,b_2] \\times \\ldots \\times [a_d, b_d]$. The problem of test coverage estimation focuses on the computation of coverage measure for a given testing array in the context of combinatorial testing, which is a fundamental technique in the context of hardware and software testing. Finally, given a DNF formula $\\varphi = T_1 \\vee T_2 \\ldots T_m$, the problem of model counting seeks to compute the number of satisfying assignments of $\\varphi$. The primary contribution of our work is a simple, elegant, and efficient sampling-based algorithm, called {\\hybrid}, for estimation of union in streaming setting. Our algorithm has the worst case space complexity and update time of O((\\log |\\Omega|) . \\frac{(\\log M) + \\log(\\frac{1}{\\delta})}{\\varepsilon^{2}}). Consequently, our algorithm provides the first algorithm with linear dependence on $d$ for Klee's measure problem in streaming setting for d1, thereby settling the open problem of Woodruff and Tirthpura (PODS-12). Furthermore, a straightforward application of our algorithm lends to an efficient algorithm for coverage estimation problem in streaming setting. We then investigate whether the space complexity for coverage estimation can be further improved, and in this context, we present another streaming algorithm that uses near-optimal $O(t\\log n/\\varepsilon^2)$ space complexity but uses an update algorithm that is in P^NP, thereby showcasing an interesting time vs space trade-off in the streaming setting. Finally, we demonstrate the generality of our Delphic sets by obtaining a streaming algorithm for model counting of DNF formulas. It is worth remarking that we view a key strength of our work is the simplicity of both the algorithm and its theoretical analysis, which makes it amenable to practical implementation and the easy adoption.","tags":null,"title":"Estimating the Size of Unions of Sets in Streaming Models","type":"publication"},{"authors":["Arnab Bhattacharyya","Kuldeep Meel","A. Pavan","N.V. Vinodchandran"],"categories":null,"content":"","date":1613606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613606400,"objectID":"92a39d8f23af4caa133c370e700eca5f","permalink":"https://meelgroup.github.io/publication/pods21_f0/","publishdate":"2021-02-18T00:00:00Z","relpermalink":"/publication/pods21_f0/","section":"publication","summary":"Constraint satisfaction problems (CSPs) and data stream models are two powerful abstractions to capture a wide variety of problems arising in different domains of computer science. Developments in the two communities have mostly occurred independently and with little interaction between them. In this work, we seek to investigate whether bridging the seeming communication gap between the two communities may pave the way to richer fundamental insights. To this end, we focus on two foundational problems: model counting for CSPs and computation of zeroth frequency moments $(F_0)$ for data streams. Our investigations lead us to observe striking similarity in the core techniques employed in the algorithmic frameworks that have evolved separately for model counting and $F_0$ computation. We design a recipe for translation of algorithms developed for $F_0$ estimation to that of model counting, resulting in new algorithms for model counting. We then observe that algorithms in the context of distributed streaming can be transformed to distributed algorithms for model counting. We next turn our attention to viewing streaming from the lens of counting and show that framing $F_0$ estimation as a special case of \\#DNF counting allows us to obtain a general recipe for a rich class of streaming problems, which had been subjected to case-specific analysis in prior works. In particular, our view yields a state-of-the art algorithm for multidimensional range efficient $F_0$ estimation with a simpler analysis.","tags":null,"title":"Model Counting meets F0 Estimation","type":"publication"},{"authors":null,"categories":null,"content":"","date":1612854900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612854900,"objectID":"c0c600b34db67f2c1e12f5e12fa34a00","permalink":"https://meelgroup.github.io/talk/09022021/","publishdate":"2021-02-09T14:15:00+07:00","relpermalink":"/talk/09022021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep will be giving an in-depth talk on the rise of approximate model counting at Simons Workshop on Beyond Satisfiability. \u003ca href=\"https://simons.berkeley.edu/talks/tbd-257\"\u003eRecorded video \u003c/a\u003e.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1612509300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612509300,"objectID":"686ee99a8986f85ccb0f7a3bbacba548","permalink":"https://meelgroup.github.io/talk/05022021/","publishdate":"2021-02-05T14:15:00+07:00","relpermalink":"/talk/05022021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eKuldeep will be giving an introductory talk on \u003ca href=\"https://simons.berkeley.edu/talks/pseudo-boolean-solving-and-optimization\"\u003eApproximate Counting and Sampling \u003c/a\u003e at Simons Bootcamp for Program on Satisfiability.","type":"talk"},{"authors":["Teodora Baluta","Zheng Leong Chua","Kuldeep S. Meel","Prateek Saxena"],"categories":null,"content":"","date":1610496000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610496000,"objectID":"4fba9aa385a3d3294a5a315678302ffc","permalink":"https://meelgroup.github.io/publication/icse21/","publishdate":"2021-01-13T00:00:00Z","relpermalink":"/publication/icse21/","section":"publication","summary":"Verifying security properties of deep neural networks (DNNs) is becoming increasingly important. This paper introduces a new quantitative verification framework for DNNs that can decide, with user-specified confidence, whether a given logical property {\\psi} defined over the space of inputs of the given DNN holds for less than a user-specified threshold,{\\theta}. We present new algorithms that are scalable to large real-world models as well as proven to be sound. Our approach requires only black-box access to the models. Further, it certifies properties of both deterministic and non-deterministic DNNs. We implement our approach in a tool called PROVERO. We apply PROVERO to the problem of certifying adversarial robustness. In this context, PROVERO provides an attack-agnostic measure of robustness for a given DNN and a test input. First, we find that this metric has a strong statistical correlation with perturbation bounds reported by 2 of the most prominent white-box attack strategies today. Second, we show that PROVERO can quantitatively certify robustness with high confidence in cases where the state-of-the-art qualitative verification tool (ERAN) fails to produce conclusive results. Thus, quantitative verification scales easily to large DNNs.","tags":null,"title":"Scalable Quantitative Verification For Deep Neural Networks","type":"publication"},{"authors":["Jaroslav Bend√≠k","Kuldeep S. Meel"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"9640a843da50ead47469c70073f1dd66","permalink":"https://meelgroup.github.io/publication/aaai21_mss/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/publication/aaai21_mss/","section":"publication","summary":"Given an unsatisfiable set of constraints F, a maximal satisfiable subset (MSS) is a maximal subset of constraints C ‚äÜ F such that C is satisfiable. Over the past two decades, the steady improvement in runtime performance of algorithms for finding MSSes has led to increased adoption of MSSbased techniques in a wide variety of domains. Motivated by the progress in finding an MSS, the past decade has witnessed a surge of interest in the design of algorithmic techniques to enumerate all the MSSes, which has subsequently led to a discovery of new applications utilizing enumeration of MSSes. The development of techniques for finding and enumeration of MSSes mirrors a similar phenomenon of finding and enumeration of SAT solutions in the early 2000s, which subsequently motivated the design of algorithmic techniques for model counting. In a similar spirit, we undertake a study to investigate the feasibility of MSS counting techniques. In particular, the focus point of our investigation is to answer whether one can design efficient MSS counting techniques that do not rely on explicit MSS enumeration. The primary contribution of this work is an affirmative answer to the above question in the form of a novel algorithm. The algorithm uses a novel architecture of a wrapper W and a remainder R such that the desired MSS count can be expressed as |W|‚àí|R|. To efficiently compute |W| and |R|, the algorithm relies on the advances in projected model counting. Our empirical evaluation demonstrates that our approach can scale to instances clearly beyond the reach of enumeration-based techniques.","tags":null,"title":"Counting Maximal Satisfiable Subsets","type":"publication"},{"authors":["Bishwamittra Ghosh","Debabrota Basu","Kuldeep S. Meel"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"806d210d7d38041b09427eb7201a7428","permalink":"https://meelgroup.github.io/publication/aaai21_justicia/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/publication/aaai21_justicia/","section":"publication","summary":"As a technology ML is oblivious to societal good or bad, and thus, the field of fair machine learning has stepped up to propose multiple mathematical definitions, algorithms, and systems to ensure different notions of fairness in ML applications. Given the multitude of propositions, it has become imperative to formally verify the fairness metrics satisfied by different algorithms on different datasets. In this paper, we propose a stochastic satisfiability (SSAT) framework, Justicia, that formally verifies different fairness measures of supervised learning algorithms with respect to the underlying data distribution. We instantiate Justicia on multiple classification and bias mitigation algorithms, and datasets to verify different fairness metrics, such as disparate impact, statistical parity, and equalized odds. Justicia is scalable, accurate, and operates on non-Boolean and compound sensitive attributes unlike existing distribution-based verifiers, such as FairSquare and VeriFair. Being distribution-based by design, Justicia is more robust than the verifiers, such as AIF360, that operate on specific test samples. We also theoretically bound the finite-sample error of the verified fairness measure.","tags":null,"title":"Justicia A Stochastic SAT Approach to Formally Verify Fairness","type":"publication"},{"authors":["Suwei Yang","Massimo Lupascu","Kuldeep S. Meel"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"efd7c15bcc5c158613072b01109fb546","permalink":"https://meelgroup.github.io/publication/aaai21_forest/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/publication/aaai21_forest/","section":"publication","summary":"Over the last few decades, deforestation and climate change have caused increasing number of forest fires. In Southeast Asia, Indonesia has been the most affected country by tropical peatland forest fires. These fires have a significant impact on the climate resulting in extensive health, social and economic issues. Existing forest fire prediction systems, such as the Canadian Forest Fire Danger Rating System, are based on handcrafted features and require installation and maintenance of expensive instruments on the ground, which can be a challenge for developing countries such as Indonesia. We propose a novel, cost-effective, machine-learning based approach that uses remote sensing data to predict forest fires in Indonesia. Our prediction model achieves more than 0.81 area under the receiver operator characteristic (ROC) curve, performing significantly better than the baseline approach which never exceeds 0.70 area under ROC curve on the same tasks. Our model's performance remained above 0.81 area under ROC curve even when evaluated with reduced data. The results support our claim that machine-learning based approaches can lead to reliable and cost-effective forest fire prediction systems.","tags":null,"title":"Predicting Forest Fire Using Remote Sensing Data And Machine Learning","type":"publication"},{"authors":["Timothy van Bremen","Vincent Derkinderen","Shubham Sharma","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"deb348323d18885b66fbb3cdf126a885","permalink":"https://meelgroup.github.io/publication/aaai21_symganak/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/publication/aaai21_symganak/","section":"publication","summary":"Given a propositional formula œà, the model counting problem, also referred to as #SAT, seeks to compute the number of satisfying assignments (or models) of œà. Modern search-based model counting algorithms are built on conflict-driven clause learning, combined with the caching of certain subformulas (called components) encountered during the search process. Despite significant progress in these algorithms over the years, state-of-the-art model counters often struggle to handle large but structured instances that typically arise in combinatorial settings. Motivated by the observation that these counters do not exploit the inherent symmetries exhibited in such instances, we revisit the component caching architecture employed in current counters and introduce a novel caching scheme that focuses on identifying symmetric components. We first prove the soundness of our approach, and then integrate it into the stateof-the-art model counter GANAK. Our extensive experiments on hard combinatorial instances demonstrate that the resulting counter, SYMGANAK, leads to improvements over GANAK both in terms of PAR-2 score and the number of instances solved.","tags":null,"title":"Symmetric Component Caching for Model Counting on Structured Instances","type":"publication"},{"authors":["Yong Lai","Kuldeep S. Meel","Roland Yap"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"225d7f1ab8baa0fb70ab0aa1f1d8374b","permalink":"https://meelgroup.github.io/publication/aaai21_exactmc/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/publication/aaai21_exactmc/","section":"publication","summary":"The past two decades have seen the significant improvements of the scalability of practical model counters, which have been quite influential in many applications from artificial intelligence to formal verification. While most of exact counters fall into two categories, search-based and compilation-based, Huang and Darwiche‚Äôs remarkable observation ties these two categories: the trace of a search-based exact model counter corresponds to a Decision-DNNF formula (Huang and Darwiche 2007). Taking advantage of literal equivalences, this paper designs an efficient model counting technique such that its trace is a generalization of Decision-DNNF. We first propose a generalization of Decision-DNNF, called CCDD, to apture literal equivalences, then show that CCDD supports model counting in linear time, and finally design a model counter, called ExactMC, whose trace corresponds to CCDD. We perform an extensive experimental evaluation over a comprehensive set of benchmarks and conduct performance comparison of ExactMC vis-a-vis the state of the art counters, c2d, miniC2D, D4, ADDMC, and Ganak. Our empirical evaluation demonstrates ExactMC can solve 885 instances while the prior state of the art could solve only 843 instances, representing a significant improvement of 42 instances.","tags":null,"title":"The Power of Literal Equivalence in Model Counting","type":"publication"},{"authors":null,"categories":null,"content":"","date":1610090100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610090100,"objectID":"1eccae475e9be88286ef9c69654fcdef","permalink":"https://meelgroup.github.io/talk/08012021/","publishdate":"2021-01-08T14:15:00+07:00","relpermalink":"/talk/08012021/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eJoin, from the comfort of your home, our tutorial on \u003ca href=\"https://alexeyignatiev.github.io/ijcai20-tutorial/\"\u003eLogic-Enabled Verification and Explanation of ML Models\u003c/a\u003e at IJCAI-21.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1608189300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608189300,"objectID":"e030f5c3698fbeee07dac041b786169b","permalink":"https://meelgroup.github.io/talk/17122020/","publishdate":"2020-12-17T14:15:00+07:00","relpermalink":"/talk/17122020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on scalable quantitative verification for deep neural networks has been accepted to \u003ca href=\"https://conf.researchr.org/home/icse-2021\"\u003eICSE 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003eWe give a sampling-based approach for quantifying properties for deep neural networks and an attack-agnostic metric called adversarial hardness to capture a model\u0026apos;s robustness. \u003cbr\u003e Authors: Teodora Baluta, Zheng Leong Chua, Kuldeep S. Meel and Prateek Saxena \u003cbr\u003e ","type":"talk"},{"authors":null,"categories":null,"content":"","date":1607152500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607152500,"objectID":"09cf21f3ad9393c663c50bc81471a92b","permalink":"https://meelgroup.github.io/talk/05122020/","publishdate":"2020-12-05T14:15:00+07:00","relpermalink":"/talk/05122020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eWe will be presenting three papers at \u003ca href=\"https://nips.cc/virtual/2020/public/cal_main.html\"\u003eNeurIPS-20\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e1. The [first paper](https://arxiv.org/abs/2002.05378) focuses on efficient distance approximation in high dimension distributions. We propose an amazingly simple method that can compute L1 distance with rigorous guarantees. Come [Poster Session 5](https://neurips.cc/virtual/2020/public/poster_a8acc28734d4fe90ea24353d901ae678.html) on Thursday. \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Joint work with A. Bhattacharya, S. Gayen, and N.V. Vinodchandran \u003cbr\u003e2. The [second paper](https://arxiv.org/abs/2010.12918) provides the first scalable method to test samplers in practice. Barbarik can now test samplers that sample from log-linear models. If you propose a sampling technique but can\u0026apos;t prove its correctness, you can now use Barbarik to check its quality. Just the way we use testing for our software. ([Poster](https://t.co/zRZVsPZNka?amp=1)) \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Joint work with S. Chakraborty and Y. Pote \u003cbr\u003e3. The [third paper](https://arxiv.org/abs/2010.10724) seeks to tame discrete integration with the boon of dimensionality (Yes, the boon not the curse). We extended our IJCAI-15\u0026apos;s work of weighted to unweighted counting (thereby increasing the dimensionality) to handle rational weights. ([Poster](https://t.co/J4rYz0j8Vh?amp=1)) \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Joint work with J.M. Dudek and D. Fried","type":"talk"},{"authors":null,"categories":null,"content":"","date":1606842000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606842000,"objectID":"91fa63b771d005b41a2028ea8cada399","permalink":"https://meelgroup.github.io/talk/02122020/","publishdate":"2020-12-02T00:00:00+07:00","relpermalink":"/talk/02122020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eAll the five papers from our group were accepted to \u003ca href=\"https://aaai.org/Conferences/AAAI-21/\"\u003eAAAI 2021\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e1. Justicia: A Stochastic SAT Approach to Formally Verify Fairness \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;  Authors: Bishwamittra Ghosh, Debabrota Basu, and Kuldeep S Meel \u003cbr\u003e2. Predicting Forest Fire Using Remote Sensing Data And Machine Learning \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;  Authors: Suwei Yang, Massimo Lupascu, and Kuldeep S Meel \u003cbr\u003e3.  Symmetric Component Caching for Model Counting on Structured Instances \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Timothy van Bremen,  Vincent Derkinderen,  Shubham Sharma, Subhajit Roy, and Kuldeep S Meel \u003cbr\u003e 4. Counting Maximal Satisfiable Subsets \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Jaroslav Bendik and Kuldeep S. Meel \u003cbr\u003e5. The Power of Literal Equivalence in Model Counting \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Yong Lai, Kuldeep S Meel, and Roland Yap","type":"talk"},{"authors":["Eduard Baranov","Axel Legay","Kuldeep S. Meel"],"categories":null,"content":"","date":1604793600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604793600,"objectID":"ba7ce384eeafd3a8467ae6f36d2defac","permalink":"https://meelgroup.github.io/publication/fse20/","publishdate":"2020-11-08T00:00:00Z","relpermalink":"/publication/fse20/","section":"publication","summary":"The rise of highly configurable complex software and its widespread usage requires design of efficient testing methodology. t-wise coverage is a leading metric to measure the quality of the testing suite and the underlying test generation engine. While uniform samplingbased test generation is widely believed to be the state of the art approach to achieve t-wise coverage in presence of constraints on the set of configurations, such a scheme often fails to achieve high t-wise coverage in presence of complex constraints. In this work, we propose a novel approach Baital, based on adaptive weighted sampling using literal weighted functions, to generate test sets with high t-wise coverage. We demonstrate that our approach reaches significantly higher t-wise coverage than uniform sampling. The novel usage of literal weighted sampling leaves open several interesting directions, empirical as well as theoretical, for future research.","tags":null,"title":"Baital: An Adaptive Weighted Sampling Approach for Improved t-wise Coverage","type":"publication"},{"authors":["Arnab Bhattacharyya","Sutanu Gayen","Kuldeep S. Meel","N. V. Vinodchandran"],"categories":null,"content":"","date":1600992000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600992000,"objectID":"dc74fdd28accee51aaae59e787feb294","permalink":"https://meelgroup.github.io/publication/neurips20_approx/","publishdate":"2020-09-25T00:00:00Z","relpermalink":"/publication/neurips20_approx/","section":"publication","summary":"We design efficient distance approximation algorithms for several classes of structured high-dimensional distributions. Specifically, we show algorithms for the following problems:\n- Given sample access to two Bayesian networks $P_1$ and $P_2$ over known directed acyclic graphs $G_1$ and $G_2$ having n nodes and bounded in-degree, approximate $d_{TV}(P_1,P_2)$ to within additive error œµ using $poly(n,œµ)$ samples and time\n- Given sample access to two ferromagnetic Ising models $P_1$ and $P_2$ on n variables with bounded width, approximate $d_{TV}(P_1,P_2)$ to within additive error œµ using $poly(n,œµ)$ samples and time\n- Given sample access to two n-dimensional Gaussians $P_1$ and $P_2$, approximate $d_{TV}(P_1,P_2)$ to within additive error œµ using poly(n,œµ) samples and time\n- Given access to observations from two causal models $P$ and $Q$ on n variables that are defined over known causal graphs, approximate $d_{TV}(P_a,Q_a)$ to within additive error $œµ$ using $poly(n,œµ)$ samples, where Pa and Qa are the interventional distributions obtained by the intervention $do(A=a)$ on $P$ and $Q$ respectively for a particular variable $A$.\n\n Our results are the first efficient distance approximation algorithms for these well-studied problems. They are derived using a simple and general connection to distribution learning algorithms. The distance approximation algorithms imply new efficient algorithms for $tolerant$ testing of closeness of the above-mentioned structured high-dimensional distributions.","tags":null,"title":"Efficient Distance Approximation for Structured High-Dimensional Distributions via Learning","type":"publication"},{"authors":["Kuldeep S. Meel","Yash Pote","Sourav Chakraborty"],"categories":null,"content":"","date":1600992000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600992000,"objectID":"86e84ab07e8ec4f5d1e5a4a8da9afe99","permalink":"https://meelgroup.github.io/publication/neurips20_testing/","publishdate":"2020-09-25T00:00:00Z","relpermalink":"/publication/neurips20_testing/","section":"publication","summary":"Given a set of items F and a weight function wt : $F ‚Üí (0, 1)$, the problem of sampling seeks to sample an item proportional to its weight. Sampling is a fundamental problem in machine learning. The daunting computational complexity of sampling with formal guarantees leads designers to propose heuristics-based techniques for which no rigorous theoretical analysis exists to quantify the quality of generated distributions. This poses a challenge in designing a testing methodology to test whether a sampler under test generates samples according to a given distribution. Only recently, Chakraborty and Meel (2019) designed the first scalable verifier, called Barbarik, for samplers in the special case when the weight function wt is constant, that is, when the sampler is supposed to sample uniformly from $F$ . The techniques in Barbarik, however, fail to handle general weight functions. The primary contribution of this paper is an affirmative answer to the above challenge: motivated by Barbarik, but using different techniques and analysis, we design Barbarik2, an algorithm to test whether the distribution generated by a sampler is Œµ-close or Œ∑-far from any target distribution. In contrast to black-box sampling techniques that require a number of samples proportional to $|F|$ , Barbarik2 requires only $O(tilt(wt, œï)^2/Œ∑(Œ∑‚àí6Œµ)^3)$ samples, where the tilt is the maximum ratio of weights of two satisfying assignments. Barbarik2 can handle any arbitrary weight function. We present a prototype implementation of Barbarik2 and use it to test three state-of-the-art samplers.","tags":null,"title":"On Testing of Samplers","type":"publication"},{"authors":["Jeffrey M. Dudek","Dror Fried","Kuldeep S. Meel"],"categories":null,"content":"","date":1600992000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600992000,"objectID":"7579000927b5f1a594e1ad8b69e9fd6b","permalink":"https://meelgroup.github.io/publication/neurips20_taming/","publishdate":"2020-09-25T00:00:00Z","relpermalink":"/publication/neurips20_taming/","section":"publication","summary":"Discrete integration is a fundamental problem in computer science that concerns the computation of discrete sums over exponentially large sets. Despite intense interest from researchers for over three decades, the design of scalable techniques for computing estimates with rigorous guarantees for discrete integration remains the holy grail. The key contribution of this work addresses this scalability challenge via an efficient reduction of discrete integration to model counting. The proposed reduction is achieved via a significant increase in the dimensionality that, contrary to conventional wisdom, leads to solving an instance of the relatively simpler problem of model counting. Building on the promising approach proposed by Chakraborty et al, our work overcomes the key weakness of their approach: a restriction to dyadic weights. We augment our proposed reduction, called DeWeight, with a state of the art efficient approximate model counter and perform detailed empirical analysis over benchmarks arising from neural network verification domains, an emerging application area of critical importance. DeWeight, to the best of our knowledge, is the first technique to compute estimates with provable guarantees for this class of benchmarks.","tags":null,"title":"Taming Discrete Integration via the Boon of Dimensionality","type":"publication"},{"authors":null,"categories":null,"content":"","date":1600966800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600966800,"objectID":"cfab11bc7a954ee0cea239a55e044d71","permalink":"https://meelgroup.github.io/talk/25092020/","publishdate":"2020-09-25T00:00:00+07:00","relpermalink":"/talk/25092020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eThree Papers accepted to \u003ca href=\"https://nips.cc/\"\u003eNeurIPS 2020\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e1. The first paper on \u003ca href=\"https://arxiv.org/abs/2010.12918\"\u003eOn Testing of Samplers\u003c/a\u003e. \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;  Authors: Kuldeep S Meel, Yash Pralhad Pote and Sourav Chakraborty\u003c/br\u003e 2. The second paper on \u003ca href=\"https://arxiv.org/abs/2010.10724\"\u003eTaming Discrete Integration via the Boon of Dimensionality\u003c/a\u003e. \u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Jeffrey M. Dudek, Dror Fried and Kuldeep S. Meel\u003c/br\u003e 3. The third paper on \u003ca href=\"https://arxiv.org/abs/2002.05378\"\u003eEfficient Distance Approximation for Structured High-Dimensional Distributions via Learning\u003c/a\u003e. \u003cbr\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; Authors: Arnab Bhattacharyya, Sutanu Gayen, Kuldeep S. Meel and N. V. Vinodchandran","type":"talk"},{"authors":null,"categories":null,"content":"","date":1600362000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600362000,"objectID":"6f8cfe90ccc15939aee6168652e08408","permalink":"https://meelgroup.github.io/talk/18092020/","publishdate":"2020-09-18T00:00:00+07:00","relpermalink":"/talk/18092020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur Paper on Model Counting meets F0 Estimation (public version forthcoming!) is accepted to \u003ca href=\"https://2021.sigmod.org/\"\u003ePODS 2021\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Arnab Bhattacharyya, Kuldeep Meel, A. Pavan and N.V. Vinodchandran","type":"talk"},{"authors":null,"categories":null,"content":"","date":1599670800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1599670800,"objectID":"144c43c8b5bbbd16eb03dcc89f3f5fa1","permalink":"https://meelgroup.github.io/talk/10092020/","publishdate":"2020-09-10T00:00:00+07:00","relpermalink":"/talk/10092020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003e We [presented](https://www.youtube.com/watch?v=vCc6jpOm04Y\u0026feature=youtu.be) our work on [Phase Transition Behaviour in Knowledge Compilation](https://arxiv.org/abs/2007.10400) at \u003ca href=\"https://cp2020.a4cp.org/\"\u003eCP 2020\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":null,"categories":null,"content":"","date":1595350800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1595350800,"objectID":"5c987d6c035fc412b0aa29497ca160a7","permalink":"https://meelgroup.github.io/talk/22072020/","publishdate":"2020-07-22T00:00:00+07:00","relpermalink":"/talk/22072020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003e We presented three papers at [CAV 2020](http://i-cav.org/2020/). \u003c/b\u003e \u003cbr\u003e 1. The first paper builds on our CNF-XOR solving paradigm (BIRD) and as a result, the new versions of [ApproxMC and UniGen](https://www.comp.nus.edu.sg/~meel/Papers/cav20-sgm.pdf) are faster than ever. \u003cbr\u003e 2. The second paper proposes the first algorithm for [approximate MUS counting](https://www.comp.nus.edu.sg/~meel/Papers/cav20-bm.pdf). \u003cbr\u003e 3. The third one proposes a data-driven approach for [Boolean functional synthesis](https://www.comp.nus.edu.sg/~meel/Papers/cav20-grm.pdf), which works at the intersection of constrained sampling, machine learning and automated reasoning.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1594573200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594573200,"objectID":"ff227023618add88925ba49c0a121972","permalink":"https://meelgroup.github.io/talk/07072020/","publishdate":"2020-07-13T00:00:00+07:00","relpermalink":"/talk/07072020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eWe have released the source code of [Manthan](https://github.com/meelgroup/manthan).\u003c/b\u003e","type":"talk"},{"authors":["Rahul Gupta","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1594166400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594166400,"objectID":"81689dac8f0bacb2f9cd7b900d68fe73","permalink":"https://meelgroup.github.io/publication/cp20/","publishdate":"2020-07-08T00:00:00Z","relpermalink":"/publication/cp20/","section":"publication","summary":"The study of phase transition behaviour in SAT has led to deeper understanding and algorithmic improvements of modern SAT solvers. Motivated by these prior studies of phase transitions in SAT, we seek to study the behaviour of size and compile-time behaviour for random k-CNF formulas in the context of knowledge compilation. We perform a rigorous empirical study and analysis of the size and runtime behavior for different knowledge compilation forms (and their corresponding compilation algorithms): d-DNNFs, SDDs and OBDDs across multiple tools and compilation algorithms. We employ instances generated from the random k-CNF model with varying generation parameters to empirically reason about the expected and median behavior of size and compilation-time for these languages. Our work is similar in spirit to the early work in CSP community on phase transition behavior in SAT/CSP. In a similar spirit, we identify the interesting behavior with respect to different parameters: clause density and solution density, a novel control parameter that we identify for the study of phase transition behavior in the context of knowledge compilation. Furthermore, we summarize our empirical study in terms of two concrete conjectures; a rigorous study of these conjectures will possibly require new theoretical tools.","tags":null,"title":"Phase Transition Behaviour in Knowledge Compilation","type":"publication"},{"authors":null,"categories":null,"content":"","date":1594141200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594141200,"objectID":"a83aa6fc33e6133baad7c7beb72e522c","permalink":"https://meelgroup.github.io/talk/08072020/","publishdate":"2020-07-08T00:00:00+07:00","relpermalink":"/talk/08072020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur Paper on \u003ca href=\"https://arxiv.org/abs/2007.10400\"\u003ePhase Transition Behaviour in Knowledge Compilation\u003c/a\u003e is accepted to \u003ca href=\"https://cp2020.a4cp.org/\"\u003eCP 2020\u003c/a\u003e.\u003c/b\u003e\u003cbr\u003e Authors: Rahul Gupta, Subhajit Roy and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1594054800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594054800,"objectID":"45dc1dd1c0a49249754f64f6467a4443","permalink":"https://meelgroup.github.io/talk/13072020/","publishdate":"2020-07-07T00:00:00+07:00","relpermalink":"/talk/13072020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eWe have released [ApproxMC 4](https://github.com/meelgroup/approxmc).\u003c/b\u003e","type":"talk"},{"authors":["Arijit Shaw","Kuldeep S. Meel"],"categories":null,"content":"","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"988399ea6724533ab2931bfa02595cb1","permalink":"https://meelgroup.github.io/publication/sat20sm/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/publication/sat20sm/","section":"publication","summary":"CDCL-based SAT solvers have transformed the field of automated reasoning owing to their demonstrated efficiency at handling problems arising from diverse domains. The success of CDCL solvers is owed to the design of clever heuristics that enable the tight coupling of different components. One of the core components is phase selection, wherein the solver, during branching, decides the polarity of the branch to be explored for a given variable. Most of the state-of-the-art CDCL SAT solvers employ phase-saving as a phase selection heuristic, which was proposed to address the potential inefficiencies arising from far-backtracking. In light of the emergence of chronological backtracking in CDCL solvers, we re-examine the efficiency of phase saving. Our empirical evaluation leads to a surprising conclusion: The usage of phase saving and random selection of polarity during chronological backtracking leads to indistinguishable runtime performance in terms of instances solved and PAR-2 score. We introduce Decaying Polarity Score (DPS) to capture the trend of the polarities attained by the variable, and upon observing lack of performance improvement due to DPS, we turn to a more sophisticated heuristic seeking to capture the activity of literals and the trend of polarities: Literal State Independent Decaying Sum (LSIDS). We find the 2019 winning SAT solver, Maple_LCM_Dist_ChronoBTv3, augmented with LSIDS solves 6 more instances while achieving a reduction of over 125 seconds in PAR-2 score, a significant improvement in the context of the SAT competition.","tags":null,"title":"Designing New Phase Selection Heuristics","type":"publication"},{"authors":["Durgesh Agrawal","Bhavishya","Kuldeep S. Meel"],"categories":null,"content":"","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"33f7af0c051cba53a485f35caa0f8464","permalink":"https://meelgroup.github.io/publication/sat20abm/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/publication/sat20abm/","section":"publication","summary":"Given a Boolean formula F, the problem of model counting, also referred to as #SAT, is to compute the number of solutions of F. The hashing-based techniques for approximate counting have emerged as a dominant approach, promising achievement of both scalability and rigorous theoretical guarantees. The standard construction of strongly 2-universal hash functions employs dense XORs (i.e., involving half of the variables in expectation), which is widely known to cause degradation in the runtime performance of state of the art SAT solvers. Consequently, the past few years have witnessed an intense activity in the design of sparse XORs as hash functions. Such constructions have been proposed with beliefs to provide runtime performance improvement along with theoretical guarantees similar to that of dense XORs. The primary contribution of this paper is a rigorous theoretical and empirical analysis to understand the effect of the sparsity of XORs. In contradiction to prior beliefs of applicability of analysis for sparse hash functions to all the hashing-based techniques, we prove a contradictory result. We show that the best-known bounds obtained for sparse XORs are still too weak to yield theoretical guarantees for a large class of hashing- based techniques, including the state of the art approach ApproxMC3. We then turn to a rigorous empirical analysis of the performance benefits of sparse hash functions. To this end, we first design, to the best of our knowledge, the most efficient algorithm called SparseCount2 using sparse hash functions, which achieves at least up to two orders of magnitude performance improvement over its predecessor. Contradicting the current beliefs, we observe that SparseCount2 still falls short of ApproxMC3 in runtime performance despite the usage of dense XORs in ApproxMC3. In conclusion, our work showcases that the question of whether it is possible to use short XORs to achieve scalability while providing strong theoretical guarantees is still wide open. ","tags":null,"title":"On the Sparsity of XORs in Approximate Model Counting","type":"publication"},{"authors":[" Kuldeep S. Meel ‚ì° S. Akshay "],"categories":null,"content":"","date":1589760001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589760001,"objectID":"7dd5ff1b954e6c9808a77816c49534fe","permalink":"https://meelgroup.github.io/publication/lics-20-am/","publishdate":"2020-05-18T00:00:01Z","relpermalink":"/publication/lics-20-am/","section":"publication","summary":" Given a CNF formula F on n variables, the problem of model counting, also referred to as #SAT, is to compute the number of models or satisfying assignments of F. Model counting is a fundamental but hard problem in computer science with varied applications. Recent years have witnessed a surge of effort towards developing efficient algorithmic techniques that combine the classical 2-universal hashing (from [Stockmeyer 1983]) with the remarkable progress in SAT solving over the past decade. These techniques augment the CNF formula F with random XOR constraints and invoke an NP oracle repeatedly on the resultant CNF-XOR formulas. In practice, the NP oracle calls are replaced by calls to a SAT solver and it is observed that runtime performance of modern SAT solvers (based on conflict-driven clause learning) on CNF-XOR formulas is adversely affected by the size of XOR constraints. However, the standard construction of 2-universal hash functions chooses every variable with probability p =1/2 leading to XOR constraints of size n/2 in expectation. Consequently, the main challenge is to design sparse hash functions, where variables can be chosen with smaller probability and lead to smaller sized XOR constraints, which can then replace 2-universal hash functions. In this paper, our goal is to address this challenge both from a theoretical and a practical perspective. First, we formalize a relaxation of universal hashing, called concentrated hashing, a notion implicit in prior works to design sparse hash functions. We then establish a novel and beautiful connection between concentration measures of these hash functions and isoperimetric inequalities on boolean hypercubes. This allows us to obtain tight bounds on variance as well as the dispersion index and show that p = O(log m /m ) suffices for the design of sparse hash functions from 2^n to 2^m belonging to concentrated hash family. Finally, we use sparse hash functions belonging to this concentrated hash family to develop new approximate counting algorithms. A comprehensive experimental evaluation of our algorithm on 1896 benchmarks with computational effort of over 20,000 computational hours demonstrates significant speedup compared to existing approaches. To the best of our knowledge, this work is the first study to demonstrate runtime improvement of approximate model counting algorithms through the usage of sparse hash functions, while still retaining strong theoretical guarantees (a la 2-universal hash functions). ","tags":null,"title":"Sparse Hashing for Scalable Approximate Model Counting: Theory and Practice","type":"publication"},{"authors":["Jaroslav Bendik","Kuldeep S. Meel"],"categories":null,"content":"","date":1589760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589760000,"objectID":"2520ff3bd86542f8878164c66abc9084","permalink":"https://meelgroup.github.io/publication/cav20bm/","publishdate":"2020-05-18T00:00:00Z","relpermalink":"/publication/cav20bm/","section":"publication","summary":"Given an unsatisfiable formula F in CNF, i.e. a set of clauses, the problem of Minimal Unsatisfiable Subset (MUS) seeks to identify the minimal subset of clauses N ‚äÜ F such that N is unsatisfiable. The emerging viewpoint of MUSes as the root causes of unsatisfiability has led MUSes to find applications in a wide variety of diagnostic approaches. Recent advances in finding and enumeration of MUSes have motivated researchers to discover applications that can benefit from rich information about the set of MUSes. One such extension is that of counting the number of MUSes, which has shown to describe the inconsistency metrics for general propositional knowledge bases. The current best approach for MUS counting is to employ a MUS enumeration algorithm, which often does not scale for the cases with a reasonably large number of MUSes. Motivated by the success of hashing-based techniques in the context of model counting, we design the first approximate counting procedure with (epsilon,delta) guarantees, called AMUSIC. Our approach avoids exhaustive MUS enumeration by combining the classical technique of universal hashing with advances in QBF solvers along with a novel usage of union and intersection of MUSes to achieve runtime efficiency. Our prototype implementation of AMUSIC is shown to scale to instances that were clearly beyond the reach of enumeration-based approaches.","tags":null,"title":"Approximate Counting of Minimal Unsatisfiable Subsets","type":"publication"},{"authors":["Priyanka Golia","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1589760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589760000,"objectID":"e02bf25aadfd1776530d40379be53c34","permalink":"https://meelgroup.github.io/publication/cav20_manthan/","publishdate":"2020-05-18T00:00:00Z","relpermalink":"/publication/cav20_manthan/","section":"publication","summary":"Boolean functional synthesis is a fundamental problem in computer science with wide-ranging applications and has witnessed a surge of interest resulting in progressively improved techniques over the past decade. Despite intense algorithmic development, a large number of problems remain beyond the reach of the state of the art techniques. Motivated by the progress in machine learning, we propose Manthan, a novel data-driven approach to Boolean functional synthesis. Manthan views functional synthesis as a classification problem, relying on advances in constrained sampling for data generation, and advances in automated reasoning for a novel proof-guided refinement and provable verification. On an extensive and rigorous evaluation over 609 benchmarks, we demonstrate that Manthan significantly improves upon the current state of the art, solving 356 benchmarks in comparison to 280, which is the most solved by a state of the art technique; thereby, we demonstrate an increase of 76 benchmarks over the current state of the art. Furthermore, Manthan solves 60 benchmarks that none of the current state of the art techniques could solve. The significant performance improvements, along with our detailed analysis, highlights several interesting avenues of future work at the intersection of machine learning, constrained sampling, and automated reasoning.","tags":null,"title":"Manthan: A Data-Driven Approach for Boolean Function Synthesis","type":"publication"},{"authors":["Mate Soos","Stephan Gocht","Kuldeep S. Meel"],"categories":null,"content":"","date":1589760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589760000,"objectID":"f8642458cc4a878d792ae3b168976145","permalink":"https://meelgroup.github.io/publication/cav20sgm/","publishdate":"2020-05-18T00:00:00Z","relpermalink":"/publication/cav20sgm/","section":"publication","summary":"Given a Boolean formula, the problem of counting seeks to estimate the number of solutions of F while the problem of uniform sampling seeks to sample solutions uniformly at random. Counting and uniform sampling are fundamental problems in computer science with a wide range of applications ranging from constrained random simulation, probabilistic inference to network reliability and beyond. Despite intense theoretical and empirical investigations, development of scalable techniques for sampling and counting without sacrificing theoretical guarantees remains the holy grail. The past few years have witnessed the rise of hashing-based approaches that use XOR-based hashing and employ SAT solvers to solve the resulting CNF formulas conjuncted with XOR constraints. Since over 99 percent of the runtime of hashing-based techniques is spent inside the SAT queries, improving CNF-XOR solvers has emerged as a key challenge. In this paper, we identify the key performance bottlenecks in the recently proposed BIRD architecture, and we focus on overcoming these bottlenecks by accelerating the XOR handling within the SAT solver and on improving the solver integration through a smarter use of (partial) solutions. We integrate BIRD2 with the state of the art approximate model counter, ApproxMC3, and the state of the art almost-uniform model sampler UniGen2. Through an extensive evaluation over a large benchmark set of over 1896 instances, we observe that BIRD2 leads to consistent speed up for both counting and sampling, and in particular, we solve 77 and 51 more instances for counting and sampling respectively.","tags":null,"title":"Tinted, Detached, and Lazy CNF-XOR solving and its Applications to Counting and Sampling","type":"publication"},{"authors":["A. Dileep","Kuldeep S. Meel","Ammar F. Sabili"],"categories":null,"content":"","date":1589587201,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589587201,"objectID":"7097b92e9a464225fcb0652367607f84","permalink":"https://meelgroup.github.io/publication/lpar20dms/","publishdate":"2020-05-16T00:00:01Z","relpermalink":"/publication/lpar20dms/","section":"publication","summary":"We generalize the definition of an Induction Model given by L. Henkin (1960). The main goal of the paper is to study reduction and equivalence between these Induction Models. We give a formal definition for these concepts and then prove a criterion which can be used to check when one Induction Model can be reduced to or is equivalent to another Induction Model. We also look at the base cases and generating functions which can give us an Induction Model. There are three cases which we look at depending on the structure of the generating functions (arbitrary, additive, multiplicative).","tags":null,"title":"Induction Models on N","type":"publication"},{"authors":null,"categories":null,"content":"","date":1587747600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587747600,"objectID":"1a5820bad8a1d89fa44adee39b6a2134","permalink":"https://meelgroup.github.io/talk/25042020/","publishdate":"2020-04-25T00:00:00+07:00","relpermalink":"/talk/25042020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eTwo Papers accepted to \u003ca href=\"https://sat2020.idea-researchlab.org/\"\u003eSAT 2020\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003e 1. The first paper shows that the currently known bounds for sparse hashing are too weak to be used for algorithms such as ApproxMC. Authors: Durgesh Agarwal, Bhavishya and Kuldeep S. Meel \u003cbr\u003e 2. The second paper proposes a new phase selection strategy for SAT solvers. Improving SAT solvers is just a very very hard job and we are excited about the improvements that our proposal brings to the world of SAT solving. Authors: Arijit Shaw and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1586451600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586451600,"objectID":"6bce8d3f8b1e25c810b31c66ed4a4c10","permalink":"https://meelgroup.github.io/talk/10042020/","publishdate":"2020-04-10T00:00:00+07:00","relpermalink":"/talk/10042020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003ePaper on Sparse Hashing for Approximate Model counting accepted to \u003ca href=\"https://lics.siglog.org/lics20/\"\u003eLICS 2020\u003c/a\u003e. Authors: S. Akshay and Kuldeep S. Meel \u003c/b\u003e\u003cbr\u003eOne of the reviews: \"Rarely it is that there is a paper that proves a beautiful new theoretical result, explaining and simplifying previous work, and on top of that shows how it can be used to improve state-of-the-art practical algorithms. The paper \"Sparse hashing for scalable approximate model counting: theory and practice\" achieves exactly that.\"","type":"talk"},{"authors":null,"categories":null,"content":"","date":1586278800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586278800,"objectID":"32cff548db71e69543fc4b3ca6f038b8","permalink":"https://meelgroup.github.io/talk/08042020/","publishdate":"2020-04-08T00:00:00+07:00","relpermalink":"/talk/08042020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003ePaper accepted to \u003ca href=\"https://easychair.org/smart-program/LPAR23/\"\u003eLPAR-23\u003c/a\u003e.\u003c/b\u003e \u003cbr\u003eThe paper formalizes Induction Models on N extending the classical work of Henkin. Authors: A Dileep, Kuldeep S. Meel and Ammar F. Sabili","type":"talk"},{"authors":null,"categories":null,"content":"","date":1586106000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586106000,"objectID":"b51e273c47cda97d3505b00511a96744","permalink":"https://meelgroup.github.io/talk/06042020/","publishdate":"2020-04-06T00:00:00+07:00","relpermalink":"/talk/06042020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eThree Papers accepted at \u003ca href=\"https://www.facebook.com/groups/cavconference/?fref=mentions\"\u003eComputer Aided Verification (CAV)\u003c/a\u003e 2020 conference.\u003c/b\u003e\u003cbr\u003e1. The first paper proposes a new approach that combines sampling+machine learning+MaxSAT to achieve a significant progress in solving Boolean Functional Synthesis. Authors: Priyanka Golia, Subhajit Roy, and Kuldeep S. Meel\u003cbr\u003e2. The second paper builds on our CNF-XOR solving paradigm (BIRD) and as a result, the new versions of ApproxMC and UniGen are faster than ever. Stay tuned for our releases. Authors: Mate Soos, Stephan Gocht, and Kuldeep S. Meel\u003cbr\u003e3. The third paper proposes the first algorithm for approximate MUS counting. Authors: Jaroslav Bendik and Kuldeep S. Meel","type":"talk"},{"authors":["Wenxi Wang","Muhammad Usman","Alyas Almaawi","Kaiyuan Wang","Kuldeep S. Meel","Sarfraz Khurshid"],"categories":null,"content":"","date":1585958400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585958400,"objectID":"ee775949eb471ad5878539ca1337475f","permalink":"https://meelgroup.github.io/publication/tacas20wuawmk/","publishdate":"2020-04-04T00:00:00Z","relpermalink":"/publication/tacas20wuawmk/","section":"publication","summary":"Propositional model counting is a classic problem that has recently witnessed many technical advances and novel applications. While the basic model counting problem requires computing the number of all solutions to the given formula, in some important application scenarios, the desired count is not of all solutions, but instead, of all unique solutions up to isomorphism. In such a scenario, the user herself must try to either use the full count that the model counter returns to compute the count up to isomorphism, or ensure that the input formula to the model counter adequately captures the symmetry breaking predicates so it can directly report the count she desires. We study the use of CNF-level and domain-level symmetry breaking predicates in the context of the state-of-the-art in model counting, specifically the leading approximate model counter ApproxMC and the recently introduced exact model counter ProjMC. As benchmarks, we use a range of problems, including structurally complex specifications of software systems and constraint satisfaction problems. The results show that while it is sometimes feasible to compute the model counts up to isomorphism using the full counts that are computed by the model counters, doing so suffers from poor scalability. The addition of symmetry breaking predicates substantially assists model counters. Domain-specific predicates are particularly useful, and in many cases can provide full symmetry breaking to enable highly efficient model counting up to isomorphism. We hope our study motivates new research on designing model counters that directly account for symmetries to facilitate further applications of model counting.","tags":null,"title":"A Study of Symmetry Breaking Predicates and Model Counting","type":"publication"},{"authors":null,"categories":null,"content":"Boolean functional synthesis is a fundamental problem in computer science with wide-ranging applications and has witnessed a surge of interest resulting in progressively improved techniques over the past decade. Despite intense algorithmic development, a large number of problems remain beyond the reach of the state of the art techniques. Motivated by the progress in machine learning, we propose Manthan, a novel data-driven approach to Boolean functional synthesis. Manthan views functional synthesis as a classification problem, relying on advances in constrained sampling for data generation, and advances in automated reasoning for a novel proof-guided refinement and provable verification.\nManthan significantly improves upon the current state of the art, solving 356 benchmarks in comparison to 280, which is the most solved by a state of the art technique; thereby, it demonstrate an increase of 76 benchmarks over the current state of the art. Furthermore, Manthan solves 60 benchmarks that none of the current state of the art techniques could solve.\n","date":1585958400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585958400,"objectID":"6bd489f24a85fe7996c13957eb7d5fde","permalink":"https://meelgroup.github.io/project/manthan/","publishdate":"2020-04-04T00:00:00Z","relpermalink":"/project/manthan/","section":"project","summary":"Manthan: A Data-Driven Approach for Boolean Function Synthesis","tags":["functional synthesis"],"title":"Manthan","type":"project"},{"authors":null,"categories":null,"content":"","date":1581958800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581958800,"objectID":"ed3290dccf593177b716cf85ee5c306b","permalink":"https://meelgroup.github.io/talk/18022020/","publishdate":"2020-02-18T00:00:00+07:00","relpermalink":"/talk/18022020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003e Sampling-based approach for quantittive quantitative verification of Deep Neural Nets. \u003c/b\u003e\u003cbr\u003eWe propose a new attack agnostic metric adversarial hardness to capture the model\u0026apos;s robustness: \u003ca href=\"https://arxiv.org/pdf/2002.06864.pdf\"\u003ehttps://arxiv.org/pdf/2002.06864.pdf\u003c/a\u003e  Authors: Teodora Baluta, Zheng Leong Chua, Kuldeep S. Meel and Prateek Saxena.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1581094800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581094800,"objectID":"49ca43ca915d2331e78195215df4caf1","permalink":"https://meelgroup.github.io/talk/08022020/","publishdate":"2020-02-08T00:00:00+07:00","relpermalink":"/talk/08022020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eAlexey Ignatiev, Joao Marques-Silva, Kuldeep S. Meel and Nina Narodytska give a tutorial at the Tutorial Forum in AAAI\u0026apos;20: \u003ca href=\"https://aaai.org/Conferences/AAAI-20/aaai20tutorials/\"\u003eRigorous Verification and Explanation of ML Models\u003c/a\u003e.\u003c/b\u003e","type":"talk"},{"authors":null,"categories":null,"content":"Neural networks are increasingly employed in safety-critical domains. This has prompted interest in verifying or certifying logically encoded properties of neural networks. Prior work has largely focused on checking existential properties, wherein the goal is to check whether there exists any input that violates a given property of interest. However, neural network training is a stochastic process, and many questions arising in their analysis require probabilistic and quantitative reasoning, i.e., estimating how many inputs satisfy a given property. To this end, our paper proposes a novel and principled framework to quantitative verification of logical properties specified over neural networks. Our framework is the first to provide PAC-style soundness guarantees, in that its quantitative estimates are within a controllable and bounded error from the true count. We instantiate our algorithmic framework by building a prototype tool called NPAQ that enables checking rich properties over binarized neural networks. We show how emerging security analyses can utilize our framework in 3 applications: quantifying robustness to adversarial inputs, efficacy of trojan attacks, and fairness/bias of given neural networks.\n","date":1579996800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579996800,"objectID":"243b527fd9ae3184705bed37d6b876d7","permalink":"https://meelgroup.github.io/project/npaq/","publishdate":"2020-01-26T00:00:00Z","relpermalink":"/project/npaq/","section":"project","summary":"NPAQ: Neural Property Approximate Quantifier","tags":["machine-learning","counting"],"title":"NPAQ","type":"project"},{"authors":["Bishwamittra Ghosh","Dmitry Malioutov","Kuldeep S. Meel"],"categories":null,"content":"","date":1579737600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579737600,"objectID":"ad76e464899745df8639b926a6ed93e6","permalink":"https://meelgroup.github.io/publication/ecai20/","publishdate":"2020-01-23T00:00:00Z","relpermalink":"/publication/ecai20/","section":"publication","summary":"ML algorithms that produce rule-based predictions in Conjunctive Normal form (CNF) or in Disjunctive Normal form (DNF) are arguably some of the most interpretable ones. Although CNF/DNF rules are considered interpretable in practice, propositional logic has other very interpretable representations which are more expressive. In this paper, we generalize CNF/DNF rules and introduce relaxed-CNF rules, which is motivated by the popular usage of checklists in the medical domain. We consider relaxed definitions of standard OR/AND operators which allow exceptions in the construction of a clause and also in the selection of clauses in a rule. While the combinatorial structure of relaxed-CNF rules offers exponential succinctness, the naive learning techniques are computationally expensive. The primary contribution of this paper is to propose a novel incremental mini-batch learning procedure, called CRR, that employs advances in the combinatorial solvers and efficiently learns relaxed-CNF rules. Our experimental analysis demonstrates that CRR can generate relaxed-CNF rules which are more accurate compared to CNF rules and sparser compared to decision lists.","tags":null,"title":"Classification Rules in Relaxed Logical Form","type":"publication"},{"authors":null,"categories":null,"content":"","date":1579021200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579021200,"objectID":"3246d9690027e9caa15143796c856bd7","permalink":"https://meelgroup.github.io/talk/15012020/","publishdate":"2020-01-15T00:00:00+07:00","relpermalink":"/talk/15012020/","section":"talk","summary":"","tags":null,"title":"\u003cb\u003eOur paper on classification rules in relaxed logical form is accepted in \u003ca href=\"http://ecai2020.eu\"\u003eECAI-2020\u003c/a\u003e. Authors: Bishwamittra Ghosh, Dmitry Malioutov, and Kuldeep S. Meel\u003c/b\u003e","type":"talk"},{"authors":["Lorenzo Ciampiconi","Bishwamittra Ghosh","Jonathan Scarlett","Kuldeep S. Meel"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"1277733c3a0828228250464a11e207a8","permalink":"https://meelgroup.github.io/publication/aaai20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/aaai20/","section":"publication","summary":"The success of MaxSAT (maximum satisfiability) solving in recent years has motivated researchers to apply MaxSAT solvers in diverse discrete combinatorial optimization problems. Group testing has been studied as a combinatorial optimization problem, where the goal is to find defective items among a set of items by performing sets of tests on items. In this paper, we propose a MaxSAT-based framework, called MGT, that solves group testing, in particular, the decoding phase of non-adaptive group testing. We extend this approach to the noisy variant of group testing, and propose a compact MaxSAT-based encoding that guarantees an optimal solution. Our extensive experimental results show that MGT can solve group testing instances of 10000 items with 3% defectivity, which no prior work can handle to the best of our knowledge. Furthermore, MGT has better accuracy than the LP-based approach. We also discover an interesting phase transition behavior in the runtime, which reveals the easy-hard-easy nature of group testing.","tags":null,"title":"A MaxSAT-based Framework for Group Testing","type":"publication"},{"authors":null,"categories":null,"content":"","date":1577034000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577034000,"objectID":"fa3f2e3cb8913548c09810d0c16b90b4","permalink":"https://meelgroup.github.io/talk/23122019/","publishdate":"2019-12-23T00:00:00+07:00","relpermalink":"/talk/23122019/","section":"talk","summary":"","tags":null,"title":"Our paper on Symmetry breaking and model counting is accepted to \u003ca href=\"https://www.etaps.org/2020/tacas\"\u003eTACAS 2020\u003c/a\u003e. Authors: Wenxi Wang, Muhammad Usman, Alyas Almaawi, Kaiyuan Wang, Kuldeep S. Meel, and Sarfraz Khurshid","type":"talk"},{"authors":null,"categories":null,"content":"","date":1575651600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575651600,"objectID":"6087dd89b484e78485c7f0fc89f47bde","permalink":"https://meelgroup.github.io/talk/07122019/","publishdate":"2019-12-07T00:00:00+07:00","relpermalink":"/talk/07122019/","section":"talk","summary":"","tags":null,"title":" Two of our group\u0026apos;s papers are accepted to accepted as poster presentations with a spotlight talk at \u003ca href=\"http://www.starai.org/2020/\"\u003eStarAI 2020\u003c/a\u003e workshop in \u003ca href=\"https://aaai.org/Conferences/AAAI-20/\"\u003eAAAI 2020\u003c/a\u003e: Our AIES-19 \u003ca href=\"https://bishwamittra.github.io/publication/imli-ghosh.pdf\"\u003epaper\u003c/a\u003e on incremental classification rule learning and our CCS-19 \u003ca href=\"https://www.comp.nus.edu.sg/~teodorab/papers/NPAQ.pdf\"\u003epaper\u003c/a\u003e on quantiatative verification for binarized neural networks.","type":"talk"},{"authors":["Mate Soos"],"categories":[],"content":" Link to the original post on CrystallBall.\n\u0026nbsp;\n","date":1572714000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572714000,"objectID":"8b19e57dd6f32d057c6797f03291110e","permalink":"https://meelgroup.github.io/post/crystallball/","publishdate":"2019-11-03T00:00:00+07:00","relpermalink":"/post/crystallball/","section":"post","summary":"Link to the original post on CrystallBall.\n\u0026nbsp;","tags":[],"title":"CrystalBall: SAT solving, Data Gathering, and Machine Learning","type":"post"},{"authors":["Yaqi Xie","Ziwei Xu","Mohan S. Kankanhalli","Kuldeep S. Meel","Harold Soh"],"categories":null,"content":"","date":1569801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569801600,"objectID":"b508a7a80636352b05655ab8bf84d206","permalink":"https://meelgroup.github.io/publication/neurips19/","publishdate":"2019-09-30T00:00:00Z","relpermalink":"/publication/neurips19/","section":"publication","summary":"In this work, we aim to leverage prior symbolic knowledge to improve the performance of deep models. We propose a graph embedding network that projects propositional formulae (and assignments) onto a manifold via an augmented Graph Convolutional Network (GCN). To generate semantically-faithful embeddings, we develop techniques to recognize node heterogeneity, and semantic regularization that incorporate structural constraints into the embedding. Experiments show that our approach improves the performance of models trained to perform entailment checking and visual relation prediction. Interestingly, we observe a connection between the tractability of the propositional theory representation and the ease of embedding. Future exploration of this connection may elucidate the relationship between knowledge compilation and vector representation learning.","tags":null,"title":" Embedding Symbolic Knowledge into Deep Networks ","type":"publication"},{"authors":null,"categories":null,"content":"","date":1569776400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569776400,"objectID":"dbbbce0327c62765f386e04eca1beafa","permalink":"https://meelgroup.github.io/talk/30092019/","publishdate":"2019-09-30T00:00:00+07:00","relpermalink":"/talk/30092019/","section":"talk","summary":"","tags":null,"title":" Alexis will be presenting our work on \u003ca href=\"https://www.comp.nus.edu.sg/~meel/Papers/cp19-dm.pdf\"\u003eunifying hashing-based approaches for discrete integration\u003c/a\u003e, and Bishwa will present on \u003ca href=\"https://bishwamittra.github.io/publication/irr-ghosh.pdf\"\u003c/a\u003e learning interpretable classifiers at \u003ca href=\"https://cp2019.a4cp.org/\"\u003eCP2019\u003c/a\u003e.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1569776400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569776400,"objectID":"78bf891eea47b33dcd8cf386d6b4751a","permalink":"https://meelgroup.github.io/talk/11112019/","publishdate":"2019-09-30T00:00:00+07:00","relpermalink":"/talk/11112019/","section":"talk","summary":"","tags":null,"title":" Our \u003ca href=\"https://bishwamittra.github.io/publication/aaai_2020/AAAI-CiampiconiL.690.pdf\"\u003epaper\u003c/a\u003e on  MaxSAT-based formulation for group testing is accepted in \u003ca href=\"https://aaai.org/Conferences/AAAI-20/\"\u003eAAAI 2020\u003c/a\u003e. Authors: Lorenzo Ciampiconi, Bishwamittra Ghosh, Jonathan Scarlett and Kuldeep S. Meel","type":"talk"},{"authors":null,"categories":null,"content":"","date":1567270800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567270800,"objectID":"b331a0887d12bd9ec6622cb311ce3811","permalink":"https://meelgroup.github.io/talk/01092019/","publishdate":"2019-09-01T00:00:00+07:00","relpermalink":"/talk/01092019/","section":"talk","summary":"","tags":null,"title":"Our Paper on \u003ca href=\"https://arxiv.org/abs/1909.01161\"\u003eembedding symbolic knowledge into Neural Networks\u003c/a\u003e is accepted to \u003ca href=\"https://nips.cc/\"\u003eNeurIPS 2019\u003c/a\u003e. Authors: Yaqi Xie, Ziwei Xu, Mohan S. Kankanhalli, Kuldeep S. Meel, Harold Soh","type":"talk"},{"authors":["Teodora Baluta","Shiqi Shen","Shweta Shinde","Kuldeep S. Meel","Prateek Saxena"],"categories":null,"content":"","date":1565913600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565913600,"objectID":"0c837537a798162effc0386fe1abada7","permalink":"https://meelgroup.github.io/publication/ccs19/","publishdate":"2019-08-16T00:00:00Z","relpermalink":"/publication/ccs19/","section":"publication","summary":"Neural networks are increasingly employed in safety-critical domains. This has prompted interest in verifying or certifying logically encoded properties of neural networks. Prior work has largely focused on checking existential properties, wherein the goal is to check whether there exists any input that violates a given property of interest. However, neural network training is a stochastic process, and many questions arising in their analysis require probabilistic and quantitative reasoning, i.e., estimating how many inputs satisfy a given property. To this end, our paper proposes a novel and principled framework to quantitative verification of logical properties specified over neural networks. Our framework is the first to provide PAC-style soundness guarantees, in that its quantitative estimates are within a controllable and bounded error from the true count. We instantiate our algorithmic framework by building a prototype tool called NPAQ that enables checking rich properties over binarized neural networks. We show how emerging security analyses can utilize our framework in 3 concrete point applications: quantifying robustness to adversarial inputs, efficacy of trojan attacks, and fairness/bias of given neural networks.","tags":null,"title":" Quantitative Verification of Neural Networks And Its Security Applications  ","type":"publication"},{"authors":null,"categories":null,"content":"","date":1565629200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565629200,"objectID":"977217cab2448ff5e6f96c0fb399ec6d","permalink":"https://meelgroup.github.io/talk/13082019/","publishdate":"2019-08-13T00:00:00+07:00","relpermalink":"/talk/13082019/","section":"talk","summary":"","tags":null,"title":"We presented three papers at IJCAI-19. 1) The first paper explores the [phase transition behavior of conjunction of cardinality and XOR constraints](https://www.comp.nus.edu.sg/~meel/Papers/ijcai19pjm.pdf). 2) The second paper describes a radically new approach to exact counting wherein we compute estimates that are [probabilistically exact](https://www.comp.nus.edu.sg/~meel/Papers/ijcai19srsm.pdf)! 3) The third one is our invited paper on [#DNF](https://www.comp.nus.edu.sg/~meel/Papers/ijcai19msv.pdf).","type":"talk"},{"authors":null,"categories":null,"content":"","date":1565542800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565542800,"objectID":"dcd5da13572fcc7fc6ba7895a9920b7b","permalink":"https://meelgroup.github.io/talk/12082019/","publishdate":"2019-08-12T00:00:00+07:00","relpermalink":"/talk/12082019/","section":"talk","summary":"","tags":null,"title":"We have released the source code of [GANAK](https://github.com/meelgroup/ganak).","type":"talk"},{"authors":null,"categories":null,"content":"","date":1564419600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564419600,"objectID":"6f3ac8000010e312ca3c3c5d21479afc","permalink":"https://meelgroup.github.io/talk/30072019/","publishdate":"2019-07-30T00:00:00+07:00","relpermalink":"/talk/30072019/","section":"talk","summary":"","tags":null,"title":"Our \u003ca href=\"https://arxiv.org/abs/1906.10395\"\u003eNPAQ framework \u003c/a\u003efocused on providing PAC guarantees for verification of Neural Networks is accepted to \u003ca href=\"https://www.sigsac.org/ccs/CCS2019/\"\u003eCCS-19\u003c/a\u003e Quoting reviewer: ‚ÄúThis work is pioneering a new technique to solve an incredibly challenging problem, and it shows that smaller problem can be solved. I can live with that, future work can improve computational efficiency.\" Authors: Teodora Baluta, Shiqi Shen, Shweta Shinde, Kuldeep S. Meel, Prateek Saxena","type":"talk"},{"authors":["Alexis Colnet","Kuldeep S. Meel"],"categories":null,"content":"","date":1563580800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563580800,"objectID":"bec5286fc8f2c64b3f8c2c5d79be845f","permalink":"https://meelgroup.github.io/publication/cp19/","publishdate":"2019-07-20T00:00:00Z","relpermalink":"/publication/cp19/","section":"publication","summary":"Given a boolean formula F and a weight function $\rho$, the problem of discrete integration seeks to compute the weight of $F$, defined as the sum of the weights of satisfying assignments. Discrete integration, also known as weighted model counting, is a fundamental problem in computer science with wide variety of applications ranging from machine learning and statistics to physics and infrastructure reliability. Given the intractability of the exact variant, the problem of approximate weighted model counting has been subject to intense theoretical and practical investigations over the years. The primary contribution of this paper is to investigate development of algorithmic approaches for discrete integration. Our framework allows us to derive two different algorithms, which can be seen as dual to each other: \textsf{WISH}, which was already discovered by Ermon et al~\\cite{EGSS13c}, and a new algorithm: \textsf{SWITCH}.We argue that these algorithms can be seen as dual to each other, in the sense that their complexities differ only by a permutation of certain parameters. Indeed we show that, for $F$ defined over $n$ variables, a weight function $\rho$ that can be represented using $p$ bits, and a confidence parameter $\\delta$, there is a function $f$ and an NP oracle such that \textsf{WISH} makes $\\mathcal{O} \\left(f(n,p,\\delta)\right)$ calls to NP oracle while \textsf{SWITCH} makes $\\mathcal{O}\\left(f(p,n,\\delta)\right)$ queries. We find $f(x,y,\\delta)$ polynomial in $x$, $y$ and $1/\\delta$, more specifically $f(x,y,\\delta) = x\\log(y)\\log(x/\\delta)$. We first focus on striking similarities of both the design process and structure of the two algorithms but then show that despite this quasi-symmetry, the analysis yields time complexities dual to each other. Another contribution of this paper is the use of 3-wise property independence of XOR based hash functions in the analysis of WISH and SWITCH. To the best of our knowledge, this is the first usage of 3-wise independence in deriving stronger concentration bounds.","tags":null,"title":"Dual Hashing-based Algorithms for Discrete Integration  ","type":"publication"},{"authors":null,"categories":null,"content":"ApproxMC is a hashing-based algorithm for approximate discrete integration over finite domains and provides ($\\epsilon$,$\\delta$) guarantees. This implementation handles the case when the function is implicitely defined by SAT formula. To the best of our knowledge, the current implementation has the best runtime performance among approximate counting algorithms. We are actively improving algorithm as well as implementation and would love to hear your feedback.\n","date":1562630400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562630400,"objectID":"349f9fed458b81a5e48409a165f17185","permalink":"https://meelgroup.github.io/project/approxmc/","publishdate":"2019-07-09T00:00:00Z","relpermalink":"/project/approxmc/","section":"project","summary":"A hashing-based algorithm for discrete integration over finite domains.","tags":["sampling-and-counting"],"title":"ApproxMC","type":"project"},{"authors":null,"categories":null,"content":"Boolean satisfiability is a fundamental problem in computerscience with a wide range of applications including planning, configurationmanagement, design and verification of software/hardware systems. Modern SAT solvers achieve scalability and ro-bustness with sophisticated heuristics that are challenging to understandand explain. We propose to view modern conflict-driven clause learning (CDCL) solvers as a composition of classifiers and regressors for different tasks such as branching, clause memory management, and restarting. The current version of CrystalBall focuses on deriving a classifier to keep or throw away a learned clause. In a departure from recent machine learning based techniques, CrystalBall employs supervised learning and uses extensive, multi-gigabyte data extracted from runs of a single SAT solver to perform predictive analytics. Read this blog post for more details.\n","date":1562457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562457600,"objectID":"4ca80d7f9b1f357533aba5e4c98f80fb","permalink":"https://meelgroup.github.io/project/crystalball/","publishdate":"2019-07-07T00:00:00Z","relpermalink":"/project/crystalball/","section":"project","summary":"A framework to provide white-box access to the execution of SAT solver.","tags":["sampling-and-counting"],"title":"CrystalBall","type":"project"},{"authors":["Bishwamittra Ghosh","Dmitry Malioutov","Kuldeep S. Meel"],"categories":null,"content":"","date":1561248000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561248000,"objectID":"df8d806ecc668fb694ec57274397e57d","permalink":"https://meelgroup.github.io/publication/ijcai19_irr/","publishdate":"2019-06-23T00:00:00Z","relpermalink":"/publication/ijcai19_irr/","section":"publication","summary":"Interpretability has become a central thread in ML research. As ML algorithms continue to permeate critical application domains such as medicine, legal, and transportation, it becomes increasingly important to allow human domain experts to understand and interact with ML solutions. ML algorithms that produce predictions in the form of rules are arguably some of the most interpretable ones, but their discrete combinatorial structure makes them computationally hard to learn. Here we generalize the widely popular CNF rules and introduce relaxed-CNF rules. These rules are much more flexible in terms of fitting data (have higher capacity) but about as interpretable to people as the traditional ones. We consider relaxed definitions of standard OR/AND operators which allow exceptions in the construction of a clause and also in the selection of clauses in a rule. We first describe an exact ILP solution, which is computationally expensive. We then propose an incremental solution, which allows us to generate accurate interpretable relaxed-CNF rules with significantly improved runtime performance.","tags":null,"title":" Interpretable Classification Rules in Relaxed Logical Form ","type":"publication"},{"authors":null,"categories":null,"content":"","date":1561222800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561222800,"objectID":"fa013ae4bc902aa6b5ed128f893169d0","permalink":"https://meelgroup.github.io/talk/23062019/","publishdate":"2019-06-23T00:00:00+07:00","relpermalink":"/talk/23062019/","section":"talk","summary":"","tags":null,"title":"Our paper on \u003ca href= \"https://bishwamittra.github.io/publication/irr-ghosh.pdf\"\u003einterpretable rules expressed as relaxed-CNF\u003c/a\u003e is accepted at IJCAI workshop on XAI (Explainable Artificial Intelligence) and DSO (Data Science meets Optimization), 2019. Authors: Bishwamittra Ghosh, Dmitry Malioutov, Kuldeep S. Meel.","type":"talk"},{"authors":null,"categories":null,"content":"Given a Boolean formula $F$, the problem of model counting, also referred to as #SAT, seeks to compute the number of solutions of $F$. Model counting is a fundamental problem with a wide variety of applications ranging from planning, quantified information flow to probabilistic reasoning and the like. The modern #SAT solvers tend to be either based on static decomposition, dynamic decomposition, or a hybrid of the two. Despite dynamic decomposition based #SAT solvers sharing much of their architecture with SAT solvers, the core design and heuristics of dynamic decomposition-based #SAT solvers has remained constant for over a decade. In this paper, we revisit the architecture of the state-of-the-art dynamic decomposition-based #SAT tool, sharpSAT, and demonstrate that by introducing a new notion of probabilistic component caching and the usage of universal hashing for exact model counting along with the development of several new heuristics can lead to significant performance improvement over state-of-the-art model-counters. In particular, we develop GANAK, a new scalable probabilistic exact model counter that outperforms state-of-the-art exact and approximate model counters sharpSAT and ApproxMC3 respectively, both in terms of PAR-2 score and the number of instances solved. Furthermore, in our experiments, the model count returned by GANAK was equal to the exact model count for all the benchmarks. Finally, we observe that recently proposed preprocessing techniques for model counting benefit exact model counters while hurting the performance of approximate model counters.\n","date":1560556800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560556800,"objectID":"fb13d814b1c5ccd9c2274a5136d4e971","permalink":"https://meelgroup.github.io/project/ganak/","publishdate":"2019-06-15T00:00:00Z","relpermalink":"/project/ganak/","section":"project","summary":"GANAK: A Scalable Probabilistic Exact Model Counter","tags":["counting"],"title":"GANAK","type":"project"},{"authors":["Roger Paredes","Leonardo Duenas-Osorio","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1559347200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559347200,"objectID":"2ad29ae2d5d2278cc7a77ee5413b78b9","permalink":"https://meelgroup.github.io/publication/ress/","publishdate":"2019-06-01T00:00:00Z","relpermalink":"/publication/ress/","section":"publication","summary":"As engineered systems expand, become more interdependent, and operate in real-time, reliability assessment is indispensable to support investment and decision making. However, network reliability problems are known to be #P-complete, a computational complexity class largely believed to be intractable. The computational intractability of network reliability motivates our quest for reliable approximations. Based on their theoretical foundations, available methods can be grouped as follows: (i) exact or bounds, (ii) guarantee-less sampling, and (iii) probably approximately correct (PAC). Group (i) is well regarded due to its useful byproducts, but it does not scale in practice. Group (ii) scales well and verifies desirable properties, such as the bounded relative error, but it lacks error guarantees. Group (iii) is of great interest when precision and scalability are required, as it harbors computationally feasible approximation schemes with PAC-guarantees. We give a comprehensive review of classical methods before introducing modern techniques and our developments. We introduce K-RelNet, an extended counting-based estimation method that delivers PAC-guarantees for the K-terminal reliability problem. Then, we test methods' performance using various benchmark systems. We highlight the range of application of algorithms and provide the foundation for future resilience engineering as it increasingly necessitates methods for uncertainty quantification in complex systems.","tags":null,"title":"Network Reliability Estimation in Theory and Practice ","type":"publication"},{"authors":["Shubham Sharma","Subhajit Roy","Mate Soos","Kuldeep S. Meel"],"categories":null,"content":"","date":1558396800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558396800,"objectID":"d5464a9e7957e79f07eca253a74d5e70","permalink":"https://meelgroup.github.io/publication/ijcai19_ganak/","publishdate":"2019-05-21T00:00:00Z","relpermalink":"/publication/ijcai19_ganak/","section":"publication","summary":"Given a Boolean formula $F$, the problem of  model counting, also referred to as #SAT, seeks to compute the number of solutions of $F$. Model counting is a fundamental problem with a wide variety of applications ranging from planning, quantified information flow to probabilistic reasoning and the like. The modern #SAT solvers tend to be either based on static decomposition, dynamic decomposition, or a hybrid of the two. Despite dynamic decomposition based #SAT solvers sharing much of their architecture with SAT solvers, the core design and heuristics of dynamic decomposition-based #SAT solvers has remained constant for over a decade. In this paper, we revisit the architecture of the state-of-the-art dynamic decomposition-based #SAT tool, sharpSAT, and demonstrate that by introducing a new notion of probabilistic component caching and the usage of universal hashing for exact model counting along with the development of several new heuristics can lead to significant performance improvement over state-of-the-art model-counters. In particular, we develop GANAK, a new scalable probabilistic exact model counter that outperforms state-of-the-art exact and approximate model counters sharpSAT and ApproxMC3 respectively, both in terms of PAR-2 score and the number of instances solved. Furthermore, in our experiments, the model count returned by GANAK was equal to the exact model count for all the benchmarks. Finally, we observe that recently proposed preprocessing techniques for model counting benefit exact model counters while hurting the performance of approximate model counters.","tags":null,"title":"GANAK: A Scalable Probabilistic Exact Model Counter","type":"publication"},{"authors":["Kuldeep S. Meel","Aditya A. Shrotri","Moshe Y. Vardi"],"categories":null,"content":"","date":1558310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558310400,"objectID":"f80fb191291208c93f71463a9e57f6ef","permalink":"https://meelgroup.github.io/publication/ijcai19_dnfcounter/","publishdate":"2019-05-20T00:00:00Z","relpermalink":"/publication/ijcai19_dnfcounter/","section":"publication","summary":"The problem of counting the number of solutions of a DNF formula, also called #DNF, is a fundamental problem in artificial intelligence with applications in diverse domains ranging from network reliability to probabilistic databases. Owing to the intractability of the exact variant, efforts have focused on the design of approximate techniques for #DNF. Consequently, several Fully Polynomial Randomized Approximation Schemes (FPRASs) based on Monte Carlo techniques have been proposed. Recently, it was discovered that hashing-based techniques too lend themselves to FPRASs for #DNF. Despite significant improvements, the complexity of the hashing-based FPRAS is still worse than that of the best Monte Carlo FPRAS by polylog factors. Two questions were left unanswered in previous works: Can the complexity of the hashing-based techniques be improved? How do the various approaches stack up against each other empirically? In this paper, we first propose a new search procedure for the hashing-based FPRAS that removes the polylog factors from its time complexity. We then present the first empirical study of runtime behavior of different FPRASs for #DNF. The result of our study produces a nuanced picture. First of all, we observe that there is no single best algorithm that outperforms all others for all classes of formulas and input parameters. Second, we observe that the algorithm with the worst time complexity, solves the largest number of benchmarks.","tags":null,"title":"Not All FPRASs are Equal: Demystifying FPRASs for DNF-Counting (Extended Abstract)  ","type":"publication"},{"authors":["Yash Pote","Saurabh Joshi","Kuldeep S. Meel"],"categories":null,"content":"","date":1558310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558310400,"objectID":"a9d449ea87baacdfce0d6c3958c9ea38","permalink":"https://meelgroup.github.io/publication/ijcai19_cardxor/","publishdate":"2019-05-20T00:00:00Z","relpermalink":"/publication/ijcai19_cardxor/","section":"publication","summary":"The runtime performance of modern SAT solvers is deeply connected to the phase transition behavior of CNF formulas. While CNF solving has witnessed significant runtime improvement over the past two decades, the same does not hold for several other classes such as the conjunction of cardinality and XOR constraints, denoted as CARD-XOR formulas. The problem of determining satisfiability of CARD-XOR formulas is a fundamental problem with wide variety of applications ranging from discrete integration in the field of artificial intelligence to maximum likelihood decoding in coding theory. The runtime behavior of random CARD-XOR formulas is unexplored in prior work. In this paper, we present the first rigorous empirical study to characterize the runtime behavior of 1-CARD-XOR formulas. We show empirical evidence of a surprising phase-transition that follows a non-linear tradeoff between CARD and XOR constraints.","tags":null,"title":"Phase Transition Behavior of Cardinality and XOR Constraints  ","type":"publication"},{"authors":null,"categories":null,"content":"","date":1557853200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557853200,"objectID":"cd0c7e6c81079219d09228112cc73eb0","permalink":"https://meelgroup.github.io/talk/15052019/","publishdate":"2019-05-15T00:00:00+07:00","relpermalink":"/talk/15052019/","section":"talk","summary":"","tags":null,"title":"Kuldeep recieved notification of the award of \u003ca href= \"https://www.nrf.gov.sg/funding-grants/nrf-fellowship-for-artificial-intelligence\"\u003e NRF Fellowship for AI \u003c/a\u003e for the project: Provably Verified and Explainable Probabilistic Reasoning.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1557334800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557334800,"objectID":"2a8355d288bfc3547bb6ced9f7f9a322","permalink":"https://meelgroup.github.io/talk/09052019/","publishdate":"2019-05-09T00:00:00+07:00","relpermalink":"/talk/09052019/","section":"talk","summary":"","tags":null,"title":"Two papers accepted to IJCAI.The first paper explores the phase transition behavior of conjunction of cardinality and XOR constraints. Authors: Yash Pote, Saurabh Joshi, Kuldeep Meel.\u003cbr\u003e The second paper describes a radically new approach to exact counting wherein we compute estimates that are probabilistically exact! Authors: Shubham Sharma, Kuldeep Meel. Combined with our invited paper on \u003ca href= \"https://www.comp.nus.edu.sg/~meel/Papers/CP2018msv.pdf\"\u003e #DNF \u003c/a\u003e, this makes 3 papers that we will be presenting at IJCAI.","type":"talk"},{"authors":["Nina Narodytska","Aditya Shrotri","Kuldeep S. Meel","Alexey Ignatiev","Joao Marques Silva"],"categories":null,"content":"","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557014400,"objectID":"420c8a9ed3696044b55cbf187348f69e","permalink":"https://meelgroup.github.io/publication/sat19_heu/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/publication/sat19_heu/","section":"publication","summary":"Machine Learning (ML) models are widely used in decision making procedures in finance, medicine, education, etc. In these areas, ML outcomes can directly affect humans, e.g.\\ by deciding whether a person should get a loan or be released from prison. Therefore, we cannot blindly rely on black box ML models and need to explain the decisions made by them. This motivated the development of a variety of ML-explainer systems, concrete examples of which include LIME and its successor ANCHOR. Due to the heuristic nature of explanations produced by existing tools, it is necessary to validate them. In this work, we propose a SAT-based method to assess the quality of explanations produced by ANCHOR We encode a trained ML model and an explanation for a given prediction as a propositional formula. Then, by using a state-of-the-art approximate model counter, we estimate the quality of the provided explanation as the number of solutions supporting it.","tags":null,"title":"Assessing Heuristic Machine Learning Explanations with Model Counting  ","type":"publication"},{"authors":["Mate Soos","Raghav Kulkarni","Kuldeep S. Meel"],"categories":null,"content":"","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557014400,"objectID":"7a5c57ec9e9b888c4da1a979431bf785","permalink":"https://meelgroup.github.io/publication/sat19_cball/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/publication/sat19_cball/","section":"publication","summary":"Boolean satisfiability is a fundamental problem in computer science with a wide range of applications including planning, configuration management, design and verification of software/hardware systems. The annual SAT competition continues to witness impressive improvements in the performance of the winning SAT solvers largely thanks to the development of new heuristics arising out of intensive collaborative research in the SAT community. Modern SAT solvers achieve scalability and robustness with complex heuristics that are challenging to understand and explain. Consequently, the development of new algorithmic insights has been largely restricted to expert intuitions and evaluation of the new insights have been restricted to performance measurement in terms of the runtime of solvers or a proxy for the runtime of solvers. In this context, one may ask: whether it is possible to develop a framework to provide white-box access to the execution of SAT solver that can aid both SAT solver developers and users to synthesize algorithmic heuristics for modern SAT solvers? The primary focus of our project is precisely such a framework, which we call CrystalBall More precisely, we propose to view modern conflict-driven clause learning (CDCL) solvers as a composition of classifiers and regressors for different tasks such as branching, clause memory management, and restarting. The primary objective of this paper is to introduce a framework to peek inside the SAT solvers -- CrystalBall -- to the AI and SAT community. The current version of CrystalBall focuses on deriving a classifier to keep or throw away a learned clause. In a departure from recent machine learning based techniques, CrystalBall, employs supervised learning and uses extensive, multi-gigabyte data extracted from runs of a single SAT solver to perform predictive analytics. ","tags":null,"title":"CrystalBall: Gazing in the Black Box of SAT Solving ","type":"publication"},{"authors":["Shubham Sharma"],"categories":[],"content":"This blogpost is based on our paper that got published in the procedings of International Conference on Logic for Programming, Artificial Intelligence and Reasoning (LPAR), 2018. The code is available here. The primary contribution of this work is marrying knowledge compilation with uniform sampling to design a new uniform sampler KUS. The main result is that KUS is able to solve more number of benchmarks than existing state-of-the-art uniform and almost-uniform samplers beating them by orders of magnitude in terms of runtime: Uniform Sampling *** Given a boolean formula $F$, the idea of Uniform Sampling is to generate samples from the set of solutions of $F$ called $R_F$ using a generator $\\mathcal{G}$ that guarantees: $$\\forall y \\in R_F, \\mathsf{Pr}\\left[\\mathcal{G}(F) = y\\right] = \\frac{1}{|R_F|},$$ Uniform sampling is a fundamental problem in computer science with wide range of applications ranging from bayesian analysis to software engineering and programming languages. Jerrum, Valiant, and Vazirani observed deep relationship between model counting and uniform sampling. In particular, they showed that given access to an exact model counter, one could design a uniform generator which requires only polynomially many queries to the exact model counter. On the other hand, knowledge compilation has been emerged as a vital task wherein a logical theory is compiled into a form that allows performing probabilistic inference in polynomial time. It is well known that there is a deep connection between probabilistic inference and model counting. In this context, one wonders if the recent advances in knowledge compilation can be harnessed to design a scalable uniform sampler. The primary contribution of this work is marrying knowledge compilation with uniform sampling to design a new algorithm, KUS, that performs uniform sampling, outperforming current state-of-the-art approximately uniform and uniform samplers.  Knowledge Compilation and d-DNNF representation *** To deal with computational intractability of probabilistic reasoning, knowledge compilation seeks to compile a knowledge base, often represented as a propositional formula in CNF, to a target language. Thereafter, probabilistic reasoning tasks, which are often expressed as sequence of queries, are performed by querying the knowledge base in the target language. Deterministic Decomposable Negation Normal Form (d-DNNF) have emerged as a central target language in knowledge compilation community since several probabilistic reasoning tasks such as probabilistic inference, maximum a posteriori (MAP) can be answered in polynomial time in the size of d-DNNF. A boolean formula in Negation Normal Form (NNF) is said to be in d-DNNF if it satisfes the following properties:   Deterministic: We refer to an NNF as deterministic if the operands of OR in all wellformed Boolean formula in the NNF are mutually inconsistent. Decomposable: We refer to an NNF as decomposable if the operands of AND in all wellformed Boolean formula in the NNF are expressed in a mutually disjoint set of variables.  ![alt_text](ddnnf.png) d-DNNF of a boolean formula $F$ represent the set of satisfying assignment $R_F$\nThe algorithm *** The central idea behind KUS is to first employ the state-of-the-art knowledge compilation approaches to compile a given CNF formula into d-DNNF form, and then performing only two passes over the d-DNNF representation to generate as many identically and independently distributed samples as specified by the user denoted by $s$. ![alt_text](kus.png) KUS takes in a CNF formula $F$ and required number of samples s and returns a set of $s$ samples such that each sample is uniformly and independently drawn from the uniform distribution over the set of solutions $R_F$. KUS first invokes a d-DNNF compiler over the formula F to obtain its d-DNNF. Then, the subroutine Annotate is invoked that annotates d-DNNF by annotating each node with a tuple consisting of the number of solutions and the set of variables in the node\u0026rsquo;s corresponding sub-formula. Then, the subroutine Sampler is invoked that returns s uniformly and independently drawn samples using the properties of d-DNNF. Finally, KUS gives random assignment to the unassigned variables for each sample in the SampleList to account for unconstrained variables that do not appear in d-DNNF by invoking the subroutine RandomAssignment.\nThe Results Our experiments demonstrated that KUS outperformed both SPUR and UniGen2 state-of-the-art uniform and almost-uniform samplers by a factor of up to $3$ orders of magnitude in terms of runtime in some cases while achieving a geometric speedup of $1.7\\times$ and $8.3\\times$ over SPUR and UniGen2 respectively. The distribution generated by KUS is statistically indistinguishable from that generated by an ideal uniform sampler. Moreover, KUS is almost oblivious to the number of samples requested. Finally, we observe that KUS can benefit from different d-DNNF compilers, therefore suggesting development of portfolio samplers in future. One of the biggest advantage of KUS is in incremental sampling--fetching multiple, relatively small-sized samples, repeatedly. The typical use case of iterative sampling can be in repeated invocation of a sampling tool until the objective (such as desired coverage or violation of property) is achieved. In incremental-sampling KUS achieves speedups of upto 3 orders of magnitude. Conclusion ***  In this work, we have proposed a new approach for uniform sampling that builds on breakthrough progress in knowledge compilation Experimentally we have demonstrated that KUS outperformed state-of-the-art uniform and almost-uniform samplers We believe that the success of KUS will motivate researchers in verification and knowledge compilation communities to investigate a broader set of logical forms amenable to efficient uniform generation ","date":1556861777,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556861777,"objectID":"e22e5d18dcda6b87e515a3cd2f8ecddb","permalink":"https://meelgroup.github.io/post/kus/","publishdate":"2019-05-03T11:06:17+05:30","relpermalink":"/post/kus/","section":"post","summary":"This blogpost is based on our paper that got published in the procedings of International Conference on Logic for Programming, Artificial Intelligence and Reasoning (LPAR), 2018. The code is available here.","tags":[],"title":"Knowledge Compilation meets Uniform Sampling","type":"post"},{"authors":["Rahul Gupta"],"categories":[],"content":"This blogpost talks about our tool WAPS. Specifically, we will talk about how we are able to utilize the idea of sampling using knowledge compilations (d-DNNFs) from our previous work ( KUS) and generalize it in order to achieve weighted and projected sampling. You can read the paper here and get the tool here. You can read the previous blog that describes uniform sampling using knowledge compilations, though it is not absolutely necessary for this post.\nLet\u0026rsquo;s talk about what it means to achieve weighted sampling at first.\nWeighted Sampling *** Given a formula $F$ and a weight function $W$, the objective of $weighted$ sampling is to draw samples from the set of satisfying assignments of $F$ called $R\\_{F}$ using a generator $\\mathcal{G}^{w}(F, W)$ that ensures $$\\forall y \\in R_{F}, \\mathsf{Pr}\\left[\\mathcal{G}^{w}(F, W) = y\\right] = \\frac{W(y)}{W(R\\_F)}$$ Intuitively, this just means that the probability of drawing a sample is proportional to its weight. In our case, we are dealing with literal-weighted weight function and the weight of an assignment is simply given by the product of weight of individual literals in the assignment. Broadly speaking, WAPS proceeds in three stages:\n d-DNNF compilation Annotation Sampling.  Let\u0026rsquo;s look at what a typical d-DNNF looks like: d-DNNF (Deterministic Decomposable Negation Normal Form) can be seen as a form of compact representation for the satisfying assignments of a given formula. One can also view it as the search space of component decomposition based DPLL procedures popularly employed in SAT solving and model counting. This perspective is helpful for Projected Sampling as you will see. Essentially, in a d-DNNF, the children of OR nodes have different (inconsistent to be precise) satisfying assignments (determinism); so, you can choose one of the children if you were to sample a satisfying assignment. On the other hand, the children of AND nodes are drawn over mutually disjoint sets of variables (decomposability); thus allowing you to simply stitch samples drawn from different children to get an overall sample.\nWAPS proceeds by first compiling the given CNF formula into its d-DNNF. This is followed by Annotation. The central idea in WAPS is to annotate the compiled d-DNNF in a way which allows weighted sampling by simply performing weighted bernoulli trials over d-DNNF in the Sampling phase (Refer to our paper for more details). The weight annotation is summarised by the figures below:\n   In our paper, we show that this annotation scheme allows you to perform weighted sampling.\n Weighted and Projected Sampling  *** Given a formula $F$, a set of projecting variables $P$ and a weight function $W$, the objective of $weighted~and~projected$ sampling is to draw samples from the set of satisfying assignments of $F$ projected over $P$ called $R_{F\\downarrow P}$ using a generator $\\mathcal{G}^{wp}(F, P, W)$ that ensures $$\\forall y \\in R\\_{F\\downarrow P}, \\mathsf{Pr}\\left[\\mathcal{G}^{wp}(F, P, W) = y\\right] = \\frac{W(y)}{W(R\\_{F\\downarrow P})}$$ Intuitively, this means that samples drawn contain only a subset of variables ($P$) as opposed to all variables in the formula and these samples obey the weight distribution given by $W$ over the variables appearing in samples. This has applications in hardware verification and other places where encoding original problem into CNF generates additional Tseitin variables while weight distribution is only defined on original variables in the problem. In such cases, we are often interested in samples from variables of the original problem. Projected Sampling  To achieve Projected Sampling, we aim to produce a d-DNNF which represents the set of satisfying assignments projected over a given set of projecting variables. To accomplish this, we modified Dsharp, a state of the art d-DNNF compiler to search first on projecting variables and then simply check if the residual formula is satisfiable to retain the corresponding path in d-DNNF. Notably, this technique has been used in the context of [Projected Model Counting](https://arxiv.org/abs/1507.07648) and [Quantitative Information Flow](https://link.springer.com/chapter/10.1007/978-3-642-40196-1_16) before. The above technique combined with weighted sampling sums up the buildup of WAPS (Weighted and Projected Sampler).\n Incremental Sampling  Another interesting property as a side-effect of knowledge compilation based sampling is that incremental sampling (i.e. fetching multiple relatively short sized samples) can be performed efficiently. This is simply done by saving the compiled d-DNNF or its annotated version depending upon whether weights change in different iterations.  Results  *** Our experiments demonstrate that WAPS is able to significantly outperform existing state-of-the-art weighted and projected sampler WeightGen, by up to $3$ orders of magnitude in terms of runtime while achieving a geometric speedup of $296\\times$. For $incremental~sampling$ i.e. fetching multiple, relatively small-sized samples, repeatedly, WAPS achieves a geometric speedup of $3.69$. Also, WAPS is almost oblivious to the number of samples requested. Empirically, the distribution generated by WAPS is statistically indistinguishable from that generated by an ideal weighted and projected sampler. Also, while performing conditioned sampling in WAPS, we incur no extra cost in terms of runtime in most of the cases. Moreover, the performance of our knowledge compilation based sampling technique is found to be oblivious to weight distribution. Detailed data is available at [here](https://github.com/meelgroup/waps).  Final Thoughts  *** This work has further tapped into the potential of sampling using knowledge compilations by developing procedures that allow weighted and projected sampling. We believe that the general idea of annotating knowledge compilations in different ways has even greater potential for sampling suited to a wider set of applications. Further work can also explore the development of faster sampling methods which leverage partially compiled d-DNNFs. Moreover, comparing the performance as well as functional capabilities with regard to sampling in different knowledge compilations such as SDDs(Sequential Decision Diagrams) is an interesting direction. ","date":1556861777,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556861777,"objectID":"9c8e94e0cc98e0669462621d467d4fc3","permalink":"https://meelgroup.github.io/post/waps/","publishdate":"2019-05-03T11:06:17+05:30","relpermalink":"/post/waps/","section":"post","summary":"This blogpost talks about our tool WAPS. Specifically, we will talk about how we are able to utilize the idea of sampling using knowledge compilations (d-DNNFs) from our previous work ( KUS) and generalize it in order to achieve weighted and projected sampling.","tags":[],"title":"WAPS: Weighted and Projected Sampling","type":"post"},{"authors":null,"categories":null,"content":"UniGen is a hashing-based algorithm to generate uniform samples subject to given set of constraints. The primary application of UniGen is in random stimuli generation for hardware and software verification. The current version of the tool has been developed over the years and is parallelizable without losing theoretical guarantees.\n","date":1556668800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556668800,"objectID":"bca60885e46d11a5d5c1f5cb7c6b0bba","permalink":"https://meelgroup.github.io/project/unigen/","publishdate":"2019-05-01T00:00:00Z","relpermalink":"/project/unigen/","section":"project","summary":"An algorithm to generate uniform samples subject to given set of constraints.","tags":["sampling-and-counting"],"title":"UniGen","type":"project"},{"authors":null,"categories":null,"content":"","date":1555866000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555866000,"objectID":"a6b6438fcfeb08e8142ef1e8ca94a1bc","permalink":"https://meelgroup.github.io/talk/22042019/","publishdate":"2019-04-22T00:00:00+07:00","relpermalink":"/talk/22042019/","section":"talk","summary":"","tags":null,"title":"Two papers accepted to SAT 2019. The first paper introduces the first version of CrystalBall, a framework intended to allow gazing into the black box of SAT solving. Authors: Kuldeep, Mate Soos, Raghav Kulkarni.\u003cbr\u003e The second paper discusses how model counting can be used to analyze explanations provided by tools such as ANCHOR. Authors: Kuldeep, Nina Narodytska, Aditya Shrotri, Alexey Ignatiev, and Joao Marques Silva.","type":"talk"},{"authors":null,"categories":null,"content":"The divide between the existence of sampling techniques that have strong theoretical guarantees but fail to scale and scalable techniques with weak or no theoretical guarantees mirrors the gap in software engineering between poor scalability of classical program synthesis techniques and billions of programs that are routinely used by practitioners. One bridge connecting the two extremes in the context of software engineering has been program testing. In contrast to testing for deterministic programs, where one trace is sufficient to prove the existence of a bug, in case of samplers one sample is typically not sufficient to prove non-conformity of the sampler to the desired distribution. This makes one wonder whether it is possible to design testing methodology to test whether a sampler under test generates samples close to a given distribution.\nWe present, Barbarik, to test whether the distribution generated is Œµ‚àíclose or Œ∑‚àífar from the uniform distribution. In contrast to the sampling techniques that require an exponential or sub-exponential number of samples for sampler whose support can be represented by n bits, Barbarik requires only O(1/(Œ∑ ‚àí Œµ)4) samples.\n","date":1554336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554336000,"objectID":"8440afc640c8919b65b62672fa8a76fb","permalink":"https://meelgroup.github.io/project/barbarik/","publishdate":"2019-04-04T00:00:00Z","relpermalink":"/project/barbarik/","section":"project","summary":"On Testing of Uniform Samplers","tags":["sampling"],"title":"Barbarik","type":"project"},{"authors":null,"categories":null,"content":"Previous work on applying Knowledge compilation has focused on uniform sampling over all the variables. Since the constraints are written in high level languages such as Verilog, the popular CNF encoding schemes as Tseitin encoding introduces additional auxiliary variables. The resulting CNF formulas are not equivalent but equisatisfiable. In particular, for a formula $G$ specified in high level language we obtain a CNF formula F such that $G (X) = \\exists Y F(X,Y)$. This makes one wonder if it is possible to extend Knowledge compilation based techniques to sample over a subset of variables. Furthermore, languages such as Verilog allow specification of weights to user-defined constraints, so there is a need to sample according to the posterior distribution. In this paper, we provide affirmative question to the above two questions: We propose KUS that samples over user defined subset of variables from posterior distribution for a given prior distribution defined over product spaces.\n","date":1554336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554336000,"objectID":"313b3b7e132ca47142b11a471cb4364f","permalink":"https://meelgroup.github.io/project/waps/","publishdate":"2019-04-04T00:00:00Z","relpermalink":"/project/waps/","section":"project","summary":"WAPS: Weighted and Projected Sampling","tags":["sampling"],"title":"WAPS","type":"project"},{"authors":["Rahul Gupta","Shubham Sharma","Subhajit Roy","Kuldeep S. Meel"],"categories":null,"content":"","date":1554336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554336000,"objectID":"d0dbdf7e4b78d7af9855681c4da727de","permalink":"https://meelgroup.github.io/publication/tacas19/","publishdate":"2019-04-04T00:00:00Z","relpermalink":"/publication/tacas19/","section":"publication","summary":"Previous work on applying Knowledge compilation has focused on uniform sampling over all the variables. Since the constraints are written in high level languages such as Verilog, the popular CNF encoding schemes as Tseitin encoding introduces additional auxiliary variables. The resulting CNF formulas are not equivalent but equisatisfiable. In particular, for a formula $G$ specified in high level language we obtain a CNF formula F such that $G (X) = \\exists Y F(X,Y)$. This makes one wonder if it is possible to extend Knowledge compilation based techniques to sample over a subset of variables. Furthermore, languages such as Verilog allow specification of weights to user-defined constraints, so there is a need to sample according to the posterior distribution. In this paper, we provide affirmative question to the above two questions: We propose KUS that samples over user defined subset of variables from posterior distribution for a given prior distribution defined over product spaces.","tags":null,"title":"WAPS: Weighted and Projected Sampling ","type":"publication"},{"authors":["Shubham Sharma"],"categories":[],"content":"This blogpost talks about our tool GANAK that inherits current advancements in SAT solving and model counting, improves upon them and contributes new ideas, thereby outperforming state-of-the-art model counters. The source code of GANAK is available here and the paper is available here. The main result is that we can solve a lot more problems than before: Let\u0026rsquo;s first define Model Counting.\nModel Counting *** Given a Boolean formula $F$, over a set of variable $X$, model counting (aka \\#SAT) seeks to compute the number of solutions of $F$. In 1979 Valiant showed that \\#SAT is \\#P-complete problem and in 1989 Toda proved that every problem in the polynomial hierarchy could be solved by just one call to a \\#P oracle. Following types of model counting has been studied in the literature: Exact Model Counting Given $F$, the problem of exact model counting is to compute the number of solutions of $F$.  Probabilistic Exact Model Counting  Given $F$ and $\\delta \\in (0,1]$, probabilistic exact model counting estimates $\\texttt{count}$ and guarantees that: $\\mathsf{Pr}\\big[|Solutions(F)| = \\texttt{count}\\big]\\geq 1-\\delta$. A recent study of different relaxations of model counting shows that probabilistic exact model counting is almost as hard as exact model counting Let\u0026rsquo;s see some of the applications of model counting\n Applications of Model Counting  *** Model counting is a fundamental problem with a wide variety of applications ranging from machine learning, quantified information flow, network reliability, planning, probabilistic reasoning, and many other related fields. For example, given a graph $G$ such that each of its edges fails with some probability and two nodes, $s$ and $t$, the problem of computing probability of existence of a path from $s$ to $t$ can be reduced to that of propositional model counting. Let\u0026rsquo;s talk about GANAK\n GANAK  *** GANAK is a scalable probabilistic exact model counter that inherits the strength of a state-of-the-art exact model counter, sharpSAT, and is equipped with the following new algorithmic advances  Probabilistic component caching (PCC) New variable branching heuristic (CSVSADS) New phase selection heuristic (PC) Independent support heuristic (IS) Exponentially decaying randomness heuristic (EDR) Learn and start over heuristic (LSO)  Detailed discussion about each of these heuristic can be found here\n Results  *** We evaluate the runtime performance of GANAK on $2031$ publicly available benchmarks arising from a wide range of applications of model counting. Our experiments demonstrate that GANAK performs best when all the heuristics describe in the previous section (except EDR) are enabled. GANAK outperforms state-of-the-art exact model counter, both in terms of PAR-2 score and the number of instances solved. Finally, in our experiments, the model count returned by GANAK was equal to the exact model count for all the benchmarks.\nWe are thankful to the National Supercomputing Center Singapore for providing us computational resources to run our experiments.\n","date":1554269777,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554269777,"objectID":"0f89392d3ac5566b9079c3f0da12da50","permalink":"https://meelgroup.github.io/post/ganak/","publishdate":"2019-04-03T11:06:17+05:30","relpermalink":"/post/ganak/","section":"post","summary":"This blogpost talks about our tool GANAK that inherits current advancements in SAT solving and model counting, improves upon them and contributes new ideas, thereby outperforming state-of-the-art model counters. The source code of GANAK is available here and the paper is available here.","tags":[],"title":"GANAK: A Scalable Probabilistic Exact Model Counter","type":"post"},{"authors":null,"categories":null,"content":"","date":1549818000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549818000,"objectID":"a607dd1e86db377744a8fa66ea1be6c6","permalink":"https://meelgroup.github.io/talk/11022019/","publishdate":"2019-02-11T00:00:00+07:00","relpermalink":"/talk/11022019/","section":"talk","summary":"","tags":null,"title":"Kuldeep  is appointed Visiting Assistant Professor in the  \u003ca href=\"https://www.cse.iitb.ac.in/\"\u003eDepartment of Computer Science and Engineering\u003c/a\u003e  at IIT Bombay.","type":"talk"},{"authors":null,"categories":null,"content":"","date":1549040400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549040400,"objectID":"6f10bcebf8461af5ae7f29424cd4a015","permalink":"https://meelgroup.github.io/talk/02022019/","publishdate":"2019-02-02T00:00:00+07:00","relpermalink":"/talk/02022019/","section":"talk","summary":"","tags":null,"title":"Paper on network reliability is accepted to \u003ca href=\"https://www.icasp13.snu.ac.kr/\"\u003eThe 13th International Conference on Applications of Statistics and Probability in Civil Engineering \u003c/a\u003e Authors: Roger Paredes, Leonardo Duenas-Osorio, Kuldeep S. Meel, and Moshe Y. Vardi.","type":"talk"},{"authors":["Davin Choo"," Mate Soos","Kian Ming A. Chai","Kuldeep S. Meel"],"categories":null,"content":"Algebraic Normal Form (ANF) and Conjunctive Normal Form (CNF) are commonly used to encode problems in Boolean algebra. ANFs are typically solved via Gr√∂bner basis algorithms, often using more memory than is feasible; while CNFs are solved using SAT solvers, which cannot exploit the algebra of polynomials naturally. We propose a paradigm that bridges between ANF and CNF solving techniques: the techniques are applied in an iterative manner to learn facts to augment the original problems. Experiments on over 1,100 benchmarks arising from four different applications domains demonstrate that learnt facts can significantly improve runtime and enable more benchmarks to be solved.\n","date":1548979200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548979200,"objectID":"4bbb13b10394f1231b16c1a9dc6b7e0f","permalink":"https://meelgroup.github.io/publication/date_cscm19/","publishdate":"2019-02-01T00:00:00Z","relpermalink":"/publication/date_cscm19/","section":"publication","summary":"Algebraic Normal Form (ANF) and Conjunctive Normal Form (CNF) are commonly used to encode problems in Boolean algebra. ANFs are typically solved via Gr√∂bner basis algorithms, often using more memory than is feasible; while CNFs are solved using SAT solvers, which cannot exploit the algebra of polynomials naturally.","tags":null,"title":"BOSPHORUS: Bridging ANF and CNF Solvers ","type":"publication"},{"authors":null,"categories":null,"content":"","date":1548435600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548435600,"objectID":"cf5044deb4f2949ca6d5814891c1403b","permalink":"https://meelgroup.github.io/talk/26012019/","publishdate":"2019-01-26T00:00:00+07:00","relpermalink":"/talk/26012019/","section":"talk","summary":"","tags":null,"title":"Our paper on weighted and projected sampling is accepted at \u003ca href=\"https://conf.researchr.org/track/etaps-2019/tacas-2019-papers\"\u003eTACAS 2019\u003c/a\u003e. Authors: Shubham Sharma, Rahul Gupta, Subhajit Roy and Kuldeep S. Meel.","type":"talk"},{"authors":["Mate Soos"],"categories":[],"content":"We are happy to release our ANF and CNF simplifier and converter called Bosphorus. It has helped us break multiple real-world ciphers. It has been re-released with major work by Davin Choo \u0026amp; Kian Ming A. Chai from DSO National Laboratories Singapore and Mate Soos \u0026amp; Kuldeep Meel from NUS. The paper will be published at the DATE 2019 conference.\nANFs and CNFs Algebraic Normal Form is a form that is used by most cryptographers to describe symmetric ciphers, hash algorithms, and lately a lot of post-quantum asymmetric ciphers. It‚Äôs a very simple notation that basically looks like this:\nx1 ‚äï x2 ‚äï x3 = 0\nx1 * x2 ‚äï x2 * x3 + 1 = 0 Where ‚Äú‚äï‚Äù represents XOR and ‚Äú‚Äù represents the AND operator. So the first line here is an XOR of binary variables x1, x2 and x3 and their XOR must be equal to 0. The second line means that ‚Äú(x1 AND x2) XOR (x2 AND x3)‚Äù must be equal to 1. This normal form allows to see a bunch of interesting things. For example, it allows us to see the so-called ‚Äúmaximum degree‚Äù of the set of equations, where the degree is the maximum number of variables AND-ed together in one line. The above set of equations has a maximum degree of 2, as (x1x2) is of degree 2. Degrees can often be a good indicator for the complexity of a problem.\nWhat‚Äôs good about ANFs is that there are a number of well-known algorithms to break problems described in them. For example, one can do (re)linearization and Gauss-Jordan elimination, or one could run Grobner-basis algorithms such as F4/F5 on it. Sometimes, the ANFs can also be solved by converting them to another normal form, Conjunctive Normal Form (CNF), used by SAT solvers. The CNF normal form looks like:\nx1 V x2 V x3\n-x1 V x3 Where x1, x2 and x3 are binary variables, ‚ÄúV‚Äù is the logical OR, and each line must be equal to TRUE. Using CNF is interesting, because the solvers used to solve them, SAT solvers, typically provide a different set of trade-offs for solving than ANF problem solvers. SAT solvers tend to use more CPU time but a lot less memory, sometimes making problems viable to solve in the ‚Äúreal world‚Äù. Whereas sometimes breaking of a cipher is enough to be demonstrated on paper, it also happens that one wants to break a cipher in the real world.\nBridging and Simplifying We believe that Bosphorus is a first of its kind system that allows ANFs to be simplified using both CNF- and ANF-based systems. It can also convert between the two normal forms and can act both as an ANF and a CNF preprocessor, like SatELite (by Een and Biere) was for CNF. We believe this makes Bosphorus unique and also uniquely useful, especially while working on ANFs.\nBosphorus uses an iterative architecture that performs the following set of steps, either until it runs out of time or until fixed point:\nReplace variables and propagate constants in the ANF Run limited Extended Linarization (XL) and inject back unit and binary XORsRun limited ElimLin and inject back unit and binary XORsConvert to CNF, run a SAT solver for a limited number of conflicts and inject back unit and binary (and potentially longer) XORs In other words, the system is an iterative simplifier/preprocessor that invokes multiple reasoning systems to try to simplify the problem as much as possible. It can outright solve the system, as most of these reasoning systems are complete, but the point is to run them only to a certain limit and inject back into the ANF the easily ‚Äúdigestible‚Äù information. The simplified ANF can then either be output as an ANF or a CNF.\nBosphorus can also take a CNF as input, perform the trivial transformation of it to ANF and then treat it as an ANF. This allows the CNF to be simplified using techniques previously unavailable to CNF systems, such as XL.\nANF to CNF Conversion ANF-to-CNF conversion is not considered that hard, and that‚Äôs why there hasn‚Äôt been too much academic effort devoted to it. However, it‚Äôs an important step without which a lot of opportunities would be missed.\nThe implemented system contains a pretty advanced ANF-to-CNF converter, using Karnaugh tables through Espresso, XOR cutting, monomial reuse, etc. It should give a pretty optimal CNF for all ANFs. So Bosphorus can be used also just as an ANF-to-CNF converter, though it‚Äôs so much more.\nFinal Thoughts One of the biggest capabilities of Bosphorus is that it can simplify/preprocess ANF systems so more heavyweight ANF solvers can have a go at them. Its ANF simplification is so powerful, it can even help to solve some CNFs by lifting them to ANF, running the ANF simplifiers, converting it back to CNF, and solving that(!). We believe our initial results, published in the paper, are very encouraging. Further, the system is in a ready-to-use state: there is a Docker image, the source should build without a hitch, and there is even a precompiled Linux binary. We would love to hear about your experience using it.\nThanks to Karsten Nohl from Security Research Labs. This post has been adapted from Mate\u0026rsquo;s post on Bosphorus.\n","date":1546666577,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546666577,"objectID":"7bc806ca993166354c50c2d890787829","permalink":"https://meelgroup.github.io/post/bosphorus/","publishdate":"2019-01-05T11:06:17+05:30","relpermalink":"/post/bosphorus/","section":"post","summary":"We are happy to release our ANF and CNF simplifier and converter called Bosphorus. It has helped us break multiple real-world ciphers. It has been re-released with major work by Davin Choo \u0026amp; Kian Ming A.","tags":[],"title":"Bosphorus: An ANF and CNF simplifier and converter","type":"post"},{"authors":null,"categories":null,"content":"Algebraic Normal Form (ANF) and Conjunctive Normal Form (CNF) are commonly used to encode problems in Boolean algebra. ANFs are typically solved via Gr√∂bner basis algorithms, often using more memory than is feasible; while CNFs are solved using SAT solvers, which cannot exploit the algebra of polynomials naturally. We propose a paradigm that bridges between ANF and CNF solving techniques: the techniques are applied in an iterative manner to learn facts to augment the original problems. Experiments on over 1,100 benchmarks arising from four different applications domains demonstrate that learnt facts can significantly improve runtime and enable more benchmarks to be solved.\n","date":1546646400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546646400,"objectID":"f234fe71ea95cfc6e47da01bd1c60d84","permalink":"https://meelgroup.github.io/project/bosphorus/","publishdate":"2019-01-05T00:00:00Z","relpermalink":"/project/bosphorus/","section":"project","summary":"An ANF and CNF simplifier and converter.","tags":["sampling-and-counting"],"title":"Bosphorus","type":"project"},{"authors":["Bishwamittra Ghosh","Kuldeep S. Meel"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"295d368e7c94661c48e7b44b52a97c3d","permalink":"https://meelgroup.github.io/publication/aies19/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/aies19/","section":"publication","summary":"The wide adoption of machine learning in the critical domains such as medical diagnosis, law, education had propelled the need for interpretable techniques due to the need for end user to understand the reasoning behind decisions due to learning systems. The computational intractability of interpretable learning led practitioners to design heuristic techniques, which fail to provide sound handles to tradeoff accuracy and interpretability. Motivated by the success of Max-SAT solvers over the past decade, recently MaxSAT-based approach, called MLIC, was proposed that seeks to reduce the problem of learning interpretable rules expressed in Conjunctive Normal Form (CNF) to a MaxSAT query. While MLIC was shown to achieve accuracy similar to that of other state of the art black-box classifiers while generating small interpretable CNF formulas, the runtime performance of MLIC is significantly lagging and renders approach unusable in practice. In this context, authors raised the question: Is it possible to achieve the best of both worlds, i.e. a sound framework for interpretable learning that can take advantage of MaxSAT solvers while scaling to real-world instances? In this paper, we take a step towards answering the above question in affirmation. We propose an incremental approach to Max-SAT based framework that achieves scalable runtime performance via partition-based training methodology. Extensive experiments on benchmarks arising from UCI repository demonstrate that IMLI achieves up to three orders of magnitude runtime improvement without loss of accuracy and interpretability. ","tags":null,"title":" IMLI: An Incremental Framework for MaxSAT-Based Learning of Interpretable Classification Rules ","type":"publication"},{"authors":["Mate Soos","Kuldeep S. Meel"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"75111dc4a90394074db65080b298062a","permalink":"https://meelgroup.github.io/publication/aaai19_bird/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/aaai19_bird/","section":"publication","summary":"Given a Boolean formula F, the problem of model counting, also referred to as #SAT is to compute the number of solutions of F. Model counting is a fundamental problem in artificial intelligence with a wide range of applications including probabilistic reasoning, decision making under uncertainty, quantified information flow, and the like. Motivated by the success of SAT solvers, there has been surge of interest in the design of hashing-based techniques for approximate model counting for the past decade. We profiled the state of the art approximate model counter ApproxMC3 and observed that over 99.99% of time is consumed by the underlying SAT solver, CryptoMinisat. This observation motivated us to ask: Can we design an efficient underlying CNF-XOR SAT solver that can take advantage of the structure of hashing-based algorithms and would this lead to an efficient approximate model counter? The primary contribution of this paper is an affirmative answer to the above question. We present a novel architecture, called BIRD, to handle CNF-XOR formulas arising from hashing-based techniques. The resulting hashing-based approximate model counter, called ApproxMC3, employs the BIRD framework in its underlying SAT solver, CryptoMinisat. To the best of our knowledge, we conducted the most comprehensive study of evaluation performance of counting algorithms involving 1896 benchmarks with computational effort totaling 86400 computational hours. Our experimental evaluation demonstrates significant runtime performance improvement for ApproxMC3 over ApproMC2. In particular, we solve 648 benchmarks more than ApproMC2, the state of the art approximate model counter and for all the formulas where both ApproMC2 and ApproxMC3 did not timeout and took more than 1 seconds, the mean speedup is 284.40 -- more than two orders of magnitude. ","tags":null,"title":"BIRD: Engineering an Efficient CNF-XOR SAT Solver and its Applications to Approximate Model Counting","type":"publication"},{"authors":["Sourav Chakraborty","Kuldeep S. Meel"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"9b84c6f4ab30315005daf6c420b3b7ca","permalink":"https://meelgroup.github.io/publication/aaai19_testing/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/aaai19_testing/","section":"publication","summary":"Recent years have seen an unprecedented adoption of artificial intelligence in wide variety of applications ranging from medical diagnosis, automobile, security to aircraft collision avoidance. Probabilistic reasoning is a key component of such modern artificial intelligence systems. Sampling techniques form the core of the state of the art probabilistic reasoning systems. In contrast to testing for deterministic programs, where one trace is sufficient to prove the existence of a bug; such is not the case for samplers as one sample is typically not sufficient to prove non-conformity of the sampler to the desired distribution. This makes one wonder: whether it is possible to design testing methodology to test whether a sampler under test generates samples close to a given distribution. The primary contribution of this paper is a positive answer to the above question: We design, to the best of our knowledge, the first algorithmic framework, Barbarik, to test whether the distribution generated by $\\varepsilon-$close or $\\eta-$far from the uniform distribution. In contrast to the sampling techniques that require an exponential or sub-exponential number of samples for sampler whose support can be represented by $n$ bits, Barbarik requires only $\\mathcal{O}(1/(\\eta-\\varepsilon)^2)$ samples. We present a prototype implementation of Barbarik and use it to test three state of the art uniform samplers over the support defined by combinatorial constraints. Barbarik is able to provide a certificate of uniformity to one sampler and demonstrate non-uniformity for the other two samplers.","tags":null,"title":"On testing of Uniform Samplers ","type":"publication"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"816d2dbbb97af0f39b49a1d4d1b9646a","permalink":"https://meelgroup.github.io/publication/aaai19_hardness/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/aaai19_hardness/","section":"publication","summary":"Probabilistic inference is increasingly being used in applications that compute with uncertain data. A promising approach to inference that has attracted recent attention exploits its inter-reducibility with model counting. Since probabilistic inference and model counting are #P-complete, various relaxations are used in practice, with the hope that these relaxations lend themselves to efficient computation while also providing rigorous approximation guarantees. In this paper, we show that contrary to commonly held belief, several relaxations used in the probabilistic inference literature do not really lead to computational efficiency in a complexity theoretic sense. Our arguments proceed by showing the corresponding relaxed notions of counting to be computationally hard. We argue that approximate counting (and hence, inference) with multiplicative tolerance and probabilistic guarantees of correctness is the only class of relaxations that provably simplifies the problem, given access to an NP-oracle. Finally, we show that for applications that compare probability estimates with a threshold, a new notion of relaxation with gaps between low and high thresholds can be used. This new relaxation allows efficient decision making in practice, given access to an NP-oracle, while also bounding the approximation error. ","tags":null,"title":"On the Hardness of Probabilistic Inference Relaxations","type":"publication"},{"authors":["Mate Soos"],"categories":[],"content":"ApproxMC is a scalable, approximate model counter that provides PAC (probably approximately correct) guarantees. We have been working very hard on speeding up approximate model counting for SAT and have made real progress. The research paper, accepted at AAAI-19 is available here. The code is available here (release with static binary here). The main result is that we can solve a lot more problems than before. The speed of solving is orders(!) of magnitude faster than the previous best system:\nBackground The idea of approximate model counting, originally by Chakraborty, Meel and Vardi was a huge hit back in 2013, and many papers have followed it, trying to improve its results. All of them were basically tied to CryptoMiniSat, the SAT solver that is maintained by Mate, as all of them relied on XOR constraints being added to the regular CNF of a typical SAT problem.\nSo it made sense to examine what CryptoMiniSat could do to improve the speed of approximate counting. This time interestingly coincided with the removal of XORs in CryptoMiniSat. The problem was the following: A lot of new in- and preprocessing systems were being invented, mostly by Armin Biere et al, and they couldn't be added to CryptoMiniSat, because they didn\u0026#8217;t take into account XOR constraints. They handled CNF just fine, but not XORs. So XORs became a burden, and they were removed in versions 3 and 4 of CryptoMiniSat. But there was need, and this being an exciting area, the XORs had to come back.\nBlast-Inprocess-Recover-Destroy But how to both have and not have XOR constraints? Re-inventing all the algorithms for XORs was not a viable option. The solution we came up with was a rather trivial one: forget the XORs during inprocessing and recover them after. The CNF would always remain the source of truth. Extracting all the XORs after in- and preprocessing would allow us to run the Gauss-Jordan elimination on the XORs post-recovery.\nThe process is conceptually quite easy:\n Blast all XORs into clauses that are in the input using intermediate variables. Perform pre- or inprocessing. Recover the XORs from the CNF. Run the CDCL and Gauss-Jordan code at the same time. Destroy the XORs and goto 2.  This system allows for everything to be in CNF form, lifting the XORs out when necessary and then forgetting them when it\u0026#8217;s convenient. All of these steps are rather trivial, except recovery, as explained below.\nXOR recovery Recovering XORs sounds like a trivial task. Let\u0026#8217;s say we have the following clauses\nx1 V x2 V x3 -x1 V -x2 V x3 x1 V -x2 V -x3 -x1 V x2 V -x3  This is conceptually equivalent to the XOR v1+v2+v3=1. So recovering this is trivial, and has been done before, by Heule in particular, in his PhD thesis. The issue with the above is the following: a stronger system than the above still implies the XOR, but doesn\u0026#8217;t look the same. For example:\nx1 V x2 V x3 -x1 V -x2 V x3 x1 V -x2 V -x3 -x1 V x2  This is almost equivalent to the previous set of clauses, but misses a literal from one of the clauses. It still implies the XOR of course. Now what? And what to do when missing literals mean that an entire clause can be missing? The algorithm to recover XORs in such cases is non-trivial. It\u0026#8217;s non-trivial not only because of the complexity of how many combinations of missing literals and clauses there can be (it\u0026#8217;s exponential) but because one must do this work extremely fast because SAT solvers are sensitive to time.\nThe algorithm that is in the paper explains all the bit-fiddling and cache-friendly data layout used along with some fun algorithms. We even managed to use compiler intrinsics to use target-specific assembly instructions for hamming weight calculation.\nThe results The results, as shown above, speak for themselves. Problems that took thousands of seconds to solve can now be solved under 20. The reason for such incredible speedup is basically the following: CryptoMiniSatv2 was way too clunky and didn\u0026#8217;t have all the fun stuff that CryptoMiniSatv5 has, plus the XOR handling was incorrect, loosing XORs and the like. The published algorithm solves the underlying issue and allows CNF pre- and inprocessing to happen independent of XORs, thus enabling CryptoMiniSatv5 to be used in all its glory. And CryptoMiniSatv5 is fast, as per the this year\u0026#8217;s SAT Competition results.\nWe thank the National Supercomputing Center Singapore that allowed us to run a large number of benchmarks on their machines, using at least 200 thousand CPU hours to make this paper. This post has been adapted from Mate's post on ApproxMCv3.\n","date":1543124177,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543124177,"objectID":"c8c3ac20f0f00447d1f4cd6841ea7324","permalink":"https://meelgroup.github.io/post/approxmcv3/","publishdate":"2018-11-25T11:06:17+05:30","relpermalink":"/post/approxmcv3/","section":"post","summary":"ApproxMC is a scalable, approximate model counter that provides PAC (probably approximately correct) guarantees. We have been working very hard on speeding up approximate model counting for SAT and have made real progress.","tags":[],"title":"ApproxMCv3: A modern approximate model counter","type":"post"},{"authors":["Shubham Sharma","Rahul Gupta","Subhajit Roy","Kuldeep Meel"],"categories":null,"content":"","date":1533081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533081600,"objectID":"60a08db58d772e9efc025e72fe5f35cd","permalink":"https://meelgroup.github.io/publication/lpar18/","publishdate":"2018-08-01T00:00:00Z","relpermalink":"/publication/lpar18/","section":"publication","summary":"Uniform sampling has drawn diverse applications in programming languages and software engineering, like in constrained-random verification (CRV), constrained-fuzzing and bug synthesis. The effectiveness of these applications depend on the uniformity of test stimuli generated from a given set of constraints. Despite significant progress over the past few years, the performance of the state of the art techniques still falls short of those of heuristic methods employed in the industry which sacrifice either uniformity or scalability when generating stimuli. In this paper, we propose a new approach to the uniform generation that builds on recent progress in knowledge compilation. The primary contribution of this paper is marrying knowledge compilation with uniform sampling: our algorithm, KUS, employs the state-of-the-art knowledge compilers to first compile constraints into d-DNNF form, and then, generates samples by making two passes over the compiled representation. We show that KUS is able to significantly outperform existing state-of-the-art algorithms, SPUR and UniGen2, by up to 3 orders of magnitude in terms of runtime while achieving a geometric speedup of 1.7 and 8.3 over SPUR and UniGen2 respectively. Also, KUS achieves a lower PAR-2 score, around 0.82x that of SPUR and 0.38x that of UniGen2. Furthermore, KUS achieves speedups of up to 3 orders of magnitude for incremental sampling. The distribution generated by KUS is statistically indistinguishable from that generated by an ideal uniform sampler. Moreover, KUS is almost oblivious to the number of samples requested.","tags":null,"title":"Knowledge Compilation meets Uniform Sampling","type":"publication"},{"authors":null,"categories":null,"content":"Uniform sampling has drawn diverse applications in programming languages and software engineering, like in constrained-random verification (CRV), constrained-fuzzing and bug synthesis. The effectiveness of these applications depend on the uniformity of test stimuli generated from a given set of constraints. Despite significant progress over the past few years, the performance of the state of the art techniques still falls short of those of heuristic methods employed in the industry which sacrifice either uniformity or scalability when generating stimuli. In this paper, we propose a new approach to the uniform generation that builds on recent progress in knowledge compilation. The primary contribution of this paper is marrying knowledge compilation with uniform sampling: our algorithm, KUS, employs the state-of-the-art knowledge compilers to first compile constraints into d-DNNF form, and then, generates samples by making two passes over the compiled representation. We show that KUS is able to significantly outperform existing state-of-the-art algorithms, SPUR and UniGen2, by up to 3 orders of magnitude in terms of runtime while achieving a geometric speedup of $1.7\\times$ and $8.3\\times$ over SPUR and UniGen2 respectively. Also, KUS achieves a lower PAR-2 score, around $0.82\\times$ that of SPUR and $0.38\\times$ that of UniGen2. Furthermore, KUS achieves speedups of up to 3 orders of magnitude for incremental sampling. The distribution generated by KUS is statistically indistinguishable from that generated by an ideal uniform sampler. Moreover, KUS is almost oblivious to the number of samples requested.\n","date":1533081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533081600,"objectID":"2ec3f4bb7e1f455803c0bd7182b2eb24","permalink":"https://meelgroup.github.io/project/kus/","publishdate":"2018-08-01T00:00:00Z","relpermalink":"/project/kus/","section":"project","summary":"Knowledge Compilation meets Uniform Sampling","tags":["sampling"],"title":"KUS","type":"project"},{"authors":["Kuldeep S. Meel","Aditya A. Shrotri","Moshe Y. Vardi"],"categories":null,"content":"","date":1533081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533081600,"objectID":"e6aa910bd53bd2d0eab4dcd9e3c2b1bb","permalink":"https://meelgroup.github.io/publication/cp18/","publishdate":"2018-08-01T00:00:00Z","relpermalink":"/publication/cp18/","section":"publication","summary":"The problem of counting the number of solutions of a DNF formula, also called #DNF, is a fundamental problem in artificial intelligence with applications in diverse domains ranging from network reliability to probabilistic databases. Owing to the intractability of the exact variant, efforts have focused on the design of approximate techniques for #DNF. Consequently, several Fully Polynomial Randomized Approximation Schemes (FPRASs) based on Monte Carlo techniques have been proposed. Recently, it was discovered that hashing-based techniques too lend themselves to FPRASs for #DNF. Despite significant improvements, the complexity of the hashing-based FPRAS is still worse than that of the best Monte Carlo FPRAS by polylog factors. Two questions were left unanswered in previous works: Can the complexity of the hashing-based techniques be improved? How do the various approaches stack up against each other empirically? In this paper, we first propose a new search procedure for the hashing-based FPRAS that removes the polylog factors from its time complexity. We then present the first empirical study of runtime behavior of different FPRASs for #DNF. The result of our study produces a nuanced picture. First of all, we observe that there is no single best algorithm that outperforms all others for all classes of formulas and input parameters. Second, we observe that the algorithm with the worst time complexity, solves the largest number of benchmarks.","tags":null,"title":"Not All FPRASs are Equal: Demystifying FPRASs for DNF-Counting ","type":"publication"},{"authors":null,"categories":null,"content":"Add your terms here and set draft: false to publish it. Otherwise, delete this file if you don\u0026rsquo;t need it.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://meelgroup.github.io/terms/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"Add your terms here and set draft: false to publish it. Otherwise, delete this file if you don\u0026rsquo;t need it.","tags":null,"title":"Terms","type":"page"},{"authors":["Dmitry Malioutov","Kuldeep S. Meel"],"categories":null,"content":"","date":1527897600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527897600,"objectID":"357c4a68f11b9f3b6a6b9e3e77ae1aab","permalink":"https://meelgroup.github.io/publication/mm18/","publishdate":"2018-06-02T00:00:00Z","relpermalink":"/publication/mm18/","section":"publication","summary":"The wide adoption of machine learning approaches in the industry, government, medicine and science has renewed the interest in interpretable machine learning: many decisions are too important to be delegated to black-box techniques such as deep neural networks or kernel SVMs. Historically, problems of learning interpretable classifiers, including classification rules or decision trees, have been approached by greedy heuristic methods as essentially all the exact optimization formulations are NP-hard. Our primary contribution is a MaxSAT-based framework, called MLIC, which allows principled search for interpretable classification rules expressible in propositional logic. Our approach benefits from the revolutionary advances in the constraint satisfaction community to solve large-scale instances of such problems. In experimental evaluations over a collection of benchmarks arising from practical scenarios, we demonstrate its effectiveness: we show that the formulation can solve large classification problems with tens or hundreds of thousands of examples and thousands of features, and to provide a tunable balance of accuracy vs. interpretability. Furthermore, we show that in many problems interpretability can be obtained at only a minor cost in accuracy. The primary objective of the paper is to show that recent advances in the MaxSAT literature make it realistic to find optimal (or very high quality near-optimal) solutions to large-scale classification problems. The key goal of the paper is to excite researchers in both interpretable classification and in the CP community to take it further and propose richer formulations, and to develop bespoke solvers attuned to the problem of interpretable ML.","tags":null,"title":"MLIC: A MaxSAT-Based framework for learning interpretable classification rules","type":"publication"},{"authors":["Fabrizio Biondi","Michael Enescu","Annelie Heuser","Axel Legay","Kuldeep S. Meel","Jean Quilbeuf"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"447f4f73138c5a1c0da26b920fcae5b5","permalink":"https://meelgroup.github.io/publication/vmcai18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/vmcai18/","section":"publication","summary":"Quantitative information flow measurement techniques have been proven to be successful in detecting leakage of confidential information from programs. Modern approaches are based on formal methods, relying on program analysis to produce a SAT formula representing the program's behavior, and model counting to measure the possible information flow. However, while program analysis scales to large codebases like the OpenSSL project, the formulas produced are too complex for analysis with precise model counting. In this paper we use the approximate model counter ApproxMC2 to quantify information flow. We show that ApproxMC2 is able to provide a large performance increase for a very small loss of precision, allowing the analysis of SAT formulas produced from complex code. We call the resulting technique ApproxFlow and test it on a large set of benchmarks against the state of the art. Finally, we show that ApproxFlow can evaluate the leakage incurred by the Heartbleed OpenSSL bug, contrarily to the state of the art.","tags":null,"title":"Scalable Approximation of Quantitative Information Flow in Programs","type":"publication"},{"authors":["Kuldeep S. Meel","Aditya A. Shrotri","Moshe Y. Vardi"],"categories":null,"content":"","date":1512086400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512086400,"objectID":"bab91a91176ed3dbfe2beac48989c011","permalink":"https://meelgroup.github.io/publication/fsttcs17/","publishdate":"2017-12-01T00:00:00Z","relpermalink":"/publication/fsttcs17/","section":"publication","summary":"Propositional model counting is a fundamental problem in artificial intelligence with a wide variety of applications, such as probabilistic inference, decision making under uncertainty, and probabilistic databases. Consequently, the problem is of theoretical as well as practical interest. When the constraints are expressed as DNF formulas, Monte Carlo-based techniques have been shown to provide a fully polynomial randomized approximation scheme (FPRAS). For CNF constraints, hashing-based approximation techniques have been demonstrated to be highly successful. Furthermore, it was shown that hashing-based techniques also yield an FPRAS for DNF counting without usage of Monte Carlo sampling. Our analysis, however, shows that the proposed hashing-based approach to DNF counting provides poor time complexity compared to the Monte Carlo-based DNF counting techniques. Given the success of hashing-based techniques for CNF constraints, it is natural to ask: Can hashing-based techniques provide an efficient FPRAS for DNF counting? In this paper, we provide a positive answer to this question. To this end, we introduce two novel algorithmic techniques: Symbolic Hashing and Stochastic Cell Counting, along with a new hash family of Row-Echelon hash functions. These innovations allow us to design a hashing-based FPRAS for DNF counting of similar complexity as that of prior works. Furthermore, we expect these techniques to have potential applications beyond DNF counting.","tags":null,"title":"On Hashing-Based Approaches to Approximate DNF-Counting ","type":"publication"},{"authors":["Kuldeep S. Meel"],"categories":null,"content":"","date":1506643200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506643200,"objectID":"79f9d664fab5304c0895368d678a235d","permalink":"https://meelgroup.github.io/publication/meel-phdthesis/","publishdate":"2017-09-29T00:00:00Z","relpermalink":"/publication/meel-phdthesis/","section":"publication","summary":"","tags":null,"title":"Constrained Counting and Sampling: Bridging the Gap between Theory and Practice ","type":"publication"},{"authors":["Jeffrey Dudek","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1501545600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1501545600,"objectID":"f717fb93617548a7afa4d32fcba16f79","permalink":"https://meelgroup.github.io/publication/ijcai17/","publishdate":"2017-08-01T00:00:00Z","relpermalink":"/publication/ijcai17/","section":"publication","summary":"Recent universal-hashing based approaches to sampling and counting crucially depend on the runtime performance of SAT~solvers on formulas expressed as the conjunction of both CNF constraints and variable-width XOR constraintsints (known as CNF-XOR formulas). In this paper, we present the first study of the runtime behavior of SAT~solvers equipped with XOR-reasoning techniques on random CNF-XOR formulas. We empirically demonstrate that a state-of-the-art SAT~solver scales exponentially on random CNF-XOR formulas across a wide range of XOR-clause densities, peaking around the empirical phase-transition location. On the theoretical front, we prove that the solution space of a random CNF-XOR formula `shatters' at all nonzero XOR-clause densities into well-separated components, similar to the behavior seen in random CNF formulas known to be difficult for many SAT-solving algorithms.","tags":null,"title":"The Hard Problems Are Almost Everywhere For Random CNF-XOR Formulas  ","type":"publication"},{"authors":["Leonardo Duenas-Osorio","Kuldeep S. Meel","Roger Paredes","Moshe Y. Vardi"],"categories":null,"content":"","date":1485907200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1485907200,"objectID":"6c6f156caea014d8f14b1da2ef03863e","permalink":"https://meelgroup.github.io/publication/aaai17/","publishdate":"2017-02-01T00:00:00Z","relpermalink":"/publication/aaai17/","section":"publication","summary":"Modern society is increasingly reliant on the functionality of infrastructure facilities and utility services. Consequently, there has been surge of interest in the problem of quantification of system reliability, which is known to be #P-complete. Reliability also contributes to the resilience of systems, so as to effectively make them bounce back after contingencies. Despite diverse progress, most techniques to estimate system reliability and resilience remain computationally expensive. In this paper, we investigate how recent advances in hashing-based approaches to counting can be exploited to improve computational techniques for system reliability. The primary contribution of this paper is a novel framework, RelNet, that provides provably approximately correct (PAC) estimates for arbitrary networks. We then apply RelNet to ten real world power transmission grids across different cities in the U.S. and are able to obtain, to the best of our knowledge, the first theoretically sound a priori estimates of reliability between several pairs of nodes of interest. Such estimates will help managing uncertainty and support rational decision making for community resilience.","tags":null,"title":"Counting-Based Reliability Estimation for Power-Transmission Grids","type":"publication"},{"authors":null,"categories":null,"content":"MIS computes minimal Independent Support for a given CNF formula. The implementation is based on MIS algorithm proposed in our CP\u0026rsquo;15 paper, which also won the Best Student Paper Award.\n","date":1473033600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473033600,"objectID":"8c28abcf470c56691f60d0c7fa7047b9","permalink":"https://meelgroup.github.io/project/mis/","publishdate":"2016-09-05T00:00:00Z","relpermalink":"/project/mis/","section":"project","summary":"An algorithm to compute minimal independent support for a given CNF formula.","tags":["sampling-and-counting"],"title":"MIS","type":"project"},{"authors":["Alexander Ivrii","Sharad Malik","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1472688000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472688000,"objectID":"276aebc2aded4347bb3b81c0a438d083","permalink":"https://meelgroup.github.io/publication/immv16/","publishdate":"2016-09-01T00:00:00Z","relpermalink":"/publication/immv16/","section":"publication","summary":"Constrained sampling and counting are two fundamental problems arising in domains ranging from artificial intelligence and security, to hardware and software testing. Recent approaches to approximate solutions for these problems rely on employing SAT solvers and universal hash functions that are typically encoded as XOR constraints of length n/2 for an input formula with n variables. As the runtime performance of SAT solvers heavily depends on the length of XOR constraints, recent research effort has been focused on reduction of length of XOR constraints. Consequently, a notion of Independent Support was proposed, and it was shown that constructing XORs over independent support (if known) can lead to a significant reduction in the length of XOR constraints without losing the theoretical guarantees of sampling and counting algorithms. In this paper, we present the first algorithmic procedure (and a corresponding tool, called MIS) to determine minimal independent support for a given CNF formula by employing a reduction to group minimal unsatisfiable subsets (GMUS). By utilizing minimal independent supports computed by MIS, we provide new tighter bounds on the length of XOR constraints for constrained counting and sampling. Furthermore, the universal hash functions constructed from independent supports computed by MIS provide two to three orders of magnitude performance improvement in state-of-the-art constrained sampling and counting tools, while still retaining theoretical guarantees.","tags":null,"title":"On Computing Minimal Independent Support and Its Applications to Sampling and Counting ","type":"publication"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"a59b9a8ccfd037a0c0618b8c950d30ec","permalink":"https://meelgroup.github.io/publication/ijcai16_counting/","publishdate":"2016-07-01T00:00:00Z","relpermalink":"/publication/ijcai16_counting/","section":"publication","summary":"Probabilistic inference via model counting has emerged as a scalable technique with strong formal guarantees, thanks to recent advances in hashing-based approximate counting. State-of-the-art hashing-based counting algorithms use an {NP} oracle, such that the number of oracle invocations grows linearly in the number of variables n in the input constraint. We present a new approach to hashing-based approximate model counting in which the number of oracle invocations grows logarithmically in $n$, while still providing strong theoretical guarantees. Our experiments show that the new approach outperforms state-of-the-art techniques for approximate counting by 1-2 orders of magnitude in running time.","tags":null,"title":"Algorithmic Improvements in Approximate Counting for Probabilistic Inference: From Linear to Logarithmic SAT Calls  ","type":"publication"},{"authors":["Jeffrey Dudek","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"66e7b430b30a36d8a3c306629e2ebcdf","permalink":"https://meelgroup.github.io/publication/ijcai16_cnfxor/","publishdate":"2016-07-01T00:00:00Z","relpermalink":"/publication/ijcai16_cnfxor/","section":"publication","summary":"The runtime performance of modern SAT solvers on random k-CNF formulas is deeply connected with the `phase-transition' phenomenon seen empirically in the satisfiability of random k-CNF formulas. Recent universal hashing-based approaches to sampling and counting crucially depend on the runtime performance of SAT solvers on formulas expressed as the conjunction of both k-CNF and XOR constraints (known as k-CNF-XOR formulas), but the behavior of random k-CNF-XOR formulas is unexplored in prior work. In this paper, we present the first study of the satisfiability of random k-CNF-XOR formulas. We show empirical evidence of a surprising phase-transition that follows a linear trade-off between k-CNF and XOR constraints. Furthermore, we prove that a phase-transition for k-CNF-XOR formulas exists for k = 2 and (when the number of k-CNF constraints is small) for k  2.","tags":null,"title":"Combining the k-CNF and XOR Phase-Transitions ","type":"publication"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Rakesh Mistry","Moshe Y. Vardi"],"categories":null,"content":"","date":1464739200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1464739200,"objectID":"2a63fb54399b9a888901a3be19c084f2","permalink":"https://meelgroup.github.io/publication/aaai16/","publishdate":"2016-06-01T00:00:00Z","relpermalink":"/publication/aaai16/","section":"publication","summary":"Hashing-based model counting has emerged as a promising approach for large-scale probabilistic inference on graphical models. A key component of these techniques is the use of xor-based 2-universal hash functions that operate over Boolean domains. Many counting problems arising in probabilistic inference are, however, naturally encoded over fi- nite discrete domains. Techniques based on bit-level (or Boolean) hash functions require these problems to be propositionalized, making it impossible to leverage the remarkable progress made in SMT (Satisfiability Modulo Theory) solvers that can reason directly over words (or bit-vectors). In this work, we present the first approximate model counter that uses word-level hashing functions, and can directly leverage the power of sophisticated SMT solvers. Empirical evaluation over an extensive suite of benchmarks demonstrates the promise of the approach.","tags":null,"title":"Approximate Probabilistic Inference via Word-Level Counting ","type":"publication"},{"authors":["Deepak Majeti","Kuldeep S. Meel","Raj Barik","Vivek Sarkar"],"categories":null,"content":"","date":1456790400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1456790400,"objectID":"3684c905c6fa0f7af455ee562d92d22f","permalink":"https://meelgroup.github.io/publication/cc16/","publishdate":"2016-03-01T00:00:00Z","relpermalink":"/publication/cc16/","section":"publication","summary":"The ubiquity of hybrid CPU+GPU architectures has led to renewed interest in automatic data layout generation owing to the fact that data layouts have a large impact on performance, and that different data layouts yield the best performance on CPUs vs. GPUs. Unfortunately, current programming models still fail to provide an effective solution to the problem of automatic data layout generation for CPU+GPU processors. Specifically, the interaction among whole-program data layout optimizations, data movement optimizations, and mapping of kernels across heterogeneous cores poses a major challenge to current programming systems. In this paper, we introduce a novel two-level hierarchical formulation of the data layout and kernel mapping problem for modern heterogeneous architectures. The top level formulation targets data layouts and kernel mapping for the entire program for which we provide a polynomial- time solution using a graph-based shortest path algorithm that uses the data layouts for the code regions (sections) for a given processor computed in the bottom level formulation. The bottom level formulation deals with the data layout problem for a parallel code region on a given processor, which is NP-Hard, and we provide a greedy algorithm that uses an affinity graph to obtain approximate solutions. We have implemented this data layout transformation in the new Heterogeneous Habanero-C (H2C) parallel programming framework and propose performance models to characterize the data layout impact on both the CPU and GPU. Our data layout framework shows significant performance improvements of up to 2.9 (geometric mean 1.5) on a multicore CPU+GPU compared to the manually specified layouts for a set of parallel programs running on a heterogeneous platform consisting of an Intel Xeon CPU and a NVIDIA GPU. Further, our framework also shows performance improvements of up to 2.7 (geometric mean 1.6) on just the multicore CPU, demonstrating the applicability of our approach to both heterogeneous and homogeneous hardware platforms.","tags":null,"title":"Automatic Data Layout Generation and Kernel Mapping for CPU+GPU Architectures ","type":"publication"},{"authors":null,"categories":null,"content":"SMTApproxMC is an approximate model counter for Bitvector theory. Given a set of constraints and weight function over assignments, WeightGen outputs samples that satisfy constraints according to weight function.\n","date":1455235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1455235200,"objectID":"722cf22165abb2c5721b44819dd6a4c6","permalink":"https://meelgroup.github.io/project/smtapproxmc/","publishdate":"2016-02-12T00:00:00Z","relpermalink":"/project/smtapproxmc/","section":"project","summary":"An approximate model counter for Bitvector theory.","tags":["sampling-and-counting"],"title":"SMTApproxMC","type":"project"},{"authors":["Kuldeep S. Meel","Moshe Y. Vardi","Supratik Chakraborty","Daniel J. Fremont","Sanjit A. Seshia","Dror Fried","Alexander Ivrii","Sharad Malik"],"categories":null,"content":"","date":1454284800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454284800,"objectID":"aab67202519959b510519fd8d5ff79e6","permalink":"https://meelgroup.github.io/publication/bnp16/","publishdate":"2016-02-01T00:00:00Z","relpermalink":"/publication/bnp16/","section":"publication","summary":"Constrained sampling and counting are two fundamental problems in artificial intelligence with a diverse range of applications, spanning probabilistic reasoning and planning to constrained-random verification. While the theory of these problems was thoroughly investigated in the 1980s, prior work either did not scale to industrial size instances or gave up correctness guarantees to achieve scalability. Recently, we proposed a novel approach that combines universal hashing and SAT solving and scales to formulas with hundreds of thousands of variables without giving up correctness guarantees. This paper provides an overview of the key ingredients of the approach and discusses challenges that need to be overcome to handle larger real-world instances.","tags":null,"title":"Constrained Sampling and Counting: Universal Hashing meets SAT Solving","type":"publication"},{"authors":["Karthik","Murthy","Sri Raj","Paul","Kuldeep S. Meel","Tiago Cogumbreiro","John Mellor-Crummey"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"894598f8e174e3c2a76b150804308a3a","permalink":"https://meelgroup.github.io/publication/pact15/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/pact15/","section":"publication","summary":"A phaser is an expressive synchronization construct that unifies collective and point-to-point coordination with dynamic registration of parallel tasks. Each task can participate in a phaser as a signaler, a waiter, or both. The participants in a phaser may change over time as tasks are added and deleted. In this paper, we present a highly concurrent and scalable design of phasers for a distributed memory environment. Our design for a distributed phaser employs a pair of skip lists augmented with the ability to collect and propagate synchronization signals. To enable a high degree of concurrency, addition and deletion of participant tasks are performed in two phases: a \"fast single-link-modify\" step followed by multiple hand-over-hand \"lazy multi-link-modify\" steps. Verifying highly-concurrent protocols is difficult. We analyze our design for a distributed phaser using the SPIN model checker. A straight-forward approach to model checking a distributed phaser operation requires an infeasibly large state space. To address this issue, we employ a novel \"message-based\" model checking scheme to enable a non- approximate complete model checking of our phaser design. We guarantee the semantic properties of phaser operations by ensuring that a set of linear temporal logic formulae are valid during model checking. We also present complexity analysis of the cost of synchronization and structural operations.","tags":null,"title":"Design and Verification of Distributed Phasers","type":"publication"},{"authors":["Alexander Ivrii","Sharad Malik","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"0ad84ff5a30b66e74a1b1459715bf64f","permalink":"https://meelgroup.github.io/publication/cp15/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"/publication/cp15/","section":"publication","summary":"Constrained sampling and counting are two fundamental problems arising in domains ranging from artificial intelligence and security, to hardware and software testing. Recent approaches to approximate solutions for these problems rely on employing SAT solvers and universal hash functions that are typically encoded as XOR constraints of length n/2 for an input formula with n variables. As the runtime performance of SAT solvers heavily depends on the length of XOR constraints, recent research effort has been focused on reduction of length of XOR constraints. Consequently, a notion of Independent Support was proposed, and it was shown that constructing XORs over independent support (if known) can lead to a significant reduction in the length of XOR constraints without losing the theoretical guarantees of sampling and counting algorithms. In this paper, we present the first algorithmic procedure (and a corresponding tool, called MIS) to determine minimal independent support for a given CNF formula by employing a reduction to group minimal unsatisfiable subsets (GMUS). By utilizing minimal independent supports computed by MIS, we provide new tighter bounds on the length of XOR constraints for constrained counting and sampling. Furthermore, the universal hash functions constructed from independent supports computed by MIS provide two to three orders of magnitude performance improvement in state-of-the-art constrained sampling and counting tools, while still retaining theoretical guarantees.","tags":null,"title":"On Computing Minimal Independent Support and Its Applications to Sampling and Counting ","type":"publication"},{"authors":["Supratik Chakraborty","Dror Fried","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"53d041bc5c707964beb68273e00f197e","permalink":"https://meelgroup.github.io/publication/ijcai15/","publishdate":"2015-07-01T00:00:00Z","relpermalink":"/publication/ijcai15/","section":"publication","summary":"The recent surge of interest in reasoning about probabilistic graphical models has led to the development of various techniques for probabilistic reasoning. Of these, techniques based on weighted model counting are particularly interesting since they can potentially leverage recent advances in unweighted model counting and in propositional satisfiability solving. In this paper, we present a new approach to weighted model counting via reduction to unweighted model counting. Our reduction, which is polynomial-time and preserves the normal form (CNF/DNF) of the input formula, allows us to exploit advances in unweighted model counting to solve weighted model counting instances. Experiments with weighted model counters built using our reduction indicate that these counters performs much better than a state-of-the-art weighted model counter.","tags":null,"title":"From Weighted to Unweighted Model Counting ","type":"publication"},{"authors":["Supratik Chakraborty","Daniel J. Fremont","Kuldeep S. Meel","Sanjit A. Seshia","Moshe Y. Vardi"],"categories":null,"content":"","date":1427846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1427846400,"objectID":"f45a789b109d1686b3f7a0471dcbb5be","permalink":"https://meelgroup.github.io/publication/tacas15/","publishdate":"2015-04-01T00:00:00Z","relpermalink":"/publication/tacas15/","section":"publication","summary":"Constrained-random verification (CRV) is widely used in industry for validating hardware designs. The effectiveness of CRV depends on the uniformity of test stimuli generated from a given set of constraints. Most existing techniques sacrifice either uniformity or scalability when generating stimuli. While recent work based on random hash functions has shown that it is possible to generate almost uniform stimuli from constraints with 100,000+ variables, the performance still falls short of today's industrial requirements. In this paper, we focus on pushing the performance frontier of uniform stimulus generation further. We present a random hashing-based, easily parallelizable algorithm, UniGen2, for sampling solutions of propositional constraints. UniGen2 provides strong and relevant theoretical guarantees in the context of CRV, while also offering significantly improved performance compared to existing almost-uniform generators. Experiments on a diverse set of benchmarks show that UniGen2 achieves an average speedup of about 20X over a state-of-the-art sampling algorithm, even when running on a single core. Moreover, experiments with multiple cores show that UniGen2 achieves a near-linear speedup in the number of cores, thereby boosting performance even further.","tags":null,"title":"On Parallel Scalable Uniform SAT Witness Generator","type":"publication"},{"authors":["Deepak Majeti","Kuldeep S. Meel","Raj Barik","Vivek Sarkar"],"categories":null,"content":"","date":1406851200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1406851200,"objectID":"e8f1762ee54390aec0d9a80fd47865d8","permalink":"https://meelgroup.github.io/publication/mmbs14/","publishdate":"2014-08-01T00:00:00Z","relpermalink":"/publication/mmbs14/","section":"publication","summary":"Data layouts play a crucial role in determining the performance of a given application running on a given architecture. Existing parallel programming frameworks for both multicore and heterogeneous systems leave the onus of selecting a data layout to the programmer. Therefore, shifting the burden of data layout selection to optimizing compilers can greatly enhance programmer productivity and application performance. In this work, we introduce ADHA: a two-level hierarchal formulation of the data layout problem for modern heterogeneous architectures. We have created a reference implementation of ADHA in the Heterogeneous Habanero-C (H2C) parallel programming system. ADHA shows significant performance benefits of up to 6.92X compared to manually specified layouts for two benchmark programs running on a CPU+GPU heterogeneous platform.","tags":null,"title":"ADHA: Automatic Data layout framework for Heterogeneous Architectures","type":"publication"},{"authors":null,"categories":null,"content":"WeightGen is hashing-based approximate weighted sampling for weighted CNF formulas. Given a set of constraints and weight function over assignments, WeightGen outputs samples that satisfy constraints according to weight function.\n","date":1406419200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1406419200,"objectID":"7ca88cc8dfb10ec2da902db905b52b6c","permalink":"https://meelgroup.github.io/project/weightgen/","publishdate":"2014-07-27T00:00:00Z","relpermalink":"/project/weightgen/","section":"project","summary":"A hashing-based approximate sampler for weighted CNF formulas.","tags":["sampling-and-counting"],"title":"WeightGen","type":"project"},{"authors":null,"categories":null,"content":"WeightMC is hashing-based algorithm for weighted counting (discrete integration) over Boolean domains. It takes a CNF formula and weight function as inputs and returns weighted count. In contrast to previous attempts to develop weighted counting that rely on use of Optimization oracles, WeightMC only uses feasibility oracle. A simple reworking of this algorithm was used by Belle et al to predicate delays in UK transportation network.\n","date":1406419200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1406419200,"objectID":"e65a3b9fcd4d2525fb3a922b8b49d900","permalink":"https://meelgroup.github.io/project/weightmc/","publishdate":"2014-07-27T00:00:00Z","relpermalink":"/project/weightmc/","section":"project","summary":"A weighted model counter over Boolean domains.","tags":["sampling-and-counting"],"title":"WeightMC","type":"project"},{"authors":["Supratik Chakraborty","Daniel J. Fremont","Kuldeep S. Meel","Sanjit A. Seshia","Moshe Y. Vardi"],"categories":null,"content":"","date":1404172800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1404172800,"objectID":"e976614e4a2f380e6610aa135e50cba3","permalink":"https://meelgroup.github.io/publication/aaai14/","publishdate":"2014-07-01T00:00:00Z","relpermalink":"/publication/aaai14/","section":"publication","summary":"Given a CNF formula and a weight for each assignment of values to variables, two natural problems are weighted model counting and distribution-aware sampling of satisfying assignments. Both problems have a wide variety of important applications. Due to the inherent complexity of the exact versions of the problems, interest has focused on solving them approximately. Prior work in this area scaled only to small problems in practice, or failed to provide strong theoretical guarantees, or employed a computationally-expensive maximum a posteriori probability (MAP) oracle that assumes prior knowledge of a factored representation of the weight distribution. We present a novel approach that works with a black-box oracle for weights of assignments and requires only an {NP}-oracle (in practice, a SAT-solver) to solve both the counting and sampling problems. Our approach works under mild assumptions on the distribution of weights of satisfying assignments, provides strong theoretical guarantees, and scales to problems involving several thousand variables. We also show that the assumptions can be significantly relaxed while improving computational efficiency if a factored representation of the weights is known.","tags":null,"title":"Distribution-Aware Sampling and Weighted Model Counting for SAT","type":"publication"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1401580800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1401580800,"objectID":"929df46e6c4c9a26dd4f8e78dcc648dd","permalink":"https://meelgroup.github.io/publication/dac14/","publishdate":"2014-06-01T00:00:00Z","relpermalink":"/publication/dac14/","section":"publication","summary":"Constrained-random simulation is the predominant approach used in the industry for functional verification of complex digital designs. The effectiveness of this approach depends on two key factors: the quality of constraints used to generate test vectors, and the randomness of solutions generated from a given set of constraints. In this paper, we focus on the second problem, and present an algorithm that significantly improves the state-of-the-art of (almost-)uniform generation of solutions of large Boolean constraints. Our algorithm provides strong theoretical guarantees on the uniformity of generated solutions and scales to problems involving hundreds of thousands of variables.","tags":null,"title":"Balancing Scalability and Uniformity in SAT-Witness Generator ","type":"publication"},{"authors":null,"categories":null,"content":"The runtime performance of modern SAT solvers is deeply connected to the phase transition behavior of CNF formulas. While CNF solving has witnessed significant runtime improvement over the past two decades, the same does not hold for several other classes such as the conjunction of cardinality and XOR constraints, denoted as CARD-XOR formulas. The problem of determining satisfiability of CARDXOR formulas is a fundamental problem with wide variety of applications ranging from discrete integration in the field of artificial intelligence to maximum likelihood decoding in coding theory. The runtime behavior of random CARD-XOR formulas is unexplored in prior work. In this paper, we present the first rigorous empirical study to characterize the runtime behavior of 1-CARD-XOR formulas. We show empirical evidence of a surprising phase-transition that follows a non-linear tradeoff between CARD and XOR constraints.\n","date":1389312000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1389312000,"objectID":"bbea6b8d82011da282d258eda3e8f3d7","permalink":"https://meelgroup.github.io/project/1cardxor/","publishdate":"2014-01-10T00:00:00Z","relpermalink":"/project/1cardxor/","section":"project","summary":"Phase Transition Behavior of Cardinality and XOR Constraints","tags":["cardinality-constraints"],"title":"1-CARD-XOR","type":"project"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1377993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1377993600,"objectID":"3d7e0a8ffd43c8c898eed526f2d047bb","permalink":"https://meelgroup.github.io/publication/cp13/","publishdate":"2013-09-01T00:00:00Z","relpermalink":"/publication/cp13/","section":"publication","summary":"Propositional model counting (#SAT), i.e., counting the number of satisfying assignments of a propositional formula, is a problem of significant theoretical and practical interest. Due to the inherent complexity of the problem, approximate model counting, which counts the number of satisfying assignments to within given tolerance and confi- dence level, was proposed as a practical alternative to exact model counting. Yet, approximate model counting has been studied essentially only theoretically. The only reported implementation of approximate model counting, due to Karp and Luby, worked only for DNF formulas. A few existing tools for CNF formulas are bounding model counters; they can handle realistic problem sizes, but fall short of providing counts within given tolerance and confidence, and, thus, are not approximate model counters. We present here a novel algorithm, as well as a reference implementation, that is the first scalable approximate model counter for CNF formulas. The algorithm works by issuing a polynomial number of calls to a SAT solver. Our tool, ApproxMC, scales to formulas with tens of thousands of variables. Careful experimental comparisons show that ApproxMC reports, with high confidence, bounds that are close to the exact count, and also succeeds in reporting bounds with small tolerance and high confidence in cases that are too large for computing exact model counts.","tags":null,"title":"A Scalable Approximate Model Counter ","type":"publication"},{"authors":["Supratik Chakraborty","Kuldeep S. Meel","Moshe Y. Vardi"],"categories":null,"content":"","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"cd81c99967d1d789818191b39c106697","permalink":"https://meelgroup.github.io/publication/cav13/","publishdate":"2013-07-01T00:00:00Z","relpermalink":"/publication/cav13/","section":"publication","summary":"Functional verification constitutes one of the most challenging tasks in the development of modern hardware systems, and simulation-based verification techniques dominate the functional verification landscape. A dominant paradigm in simulation-based verification is directed random testing, where a model of the system is simulated with a set of random test stimuli that are uniformly or near-uniformly distributed over the space of all stimuli satisfying a given set of constraints. Uniform or near-uniform generation of solutions for large constraint sets is therefore a problem of theoretical and practical interest. For Boolean constraints, prior work offered heuristic approaches with no guarantee of performance, and theoretical approaches with proven guarantees, but poor performance in practice. We offer here a new approach with theoretical performance guarantees and demonstrate its practical utility on large constraint sets.","tags":null,"title":"A Scalable and Nearly Uniform Generator of SAT Witnesses","type":"publication"}]