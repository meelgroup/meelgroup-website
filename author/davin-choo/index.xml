<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Davin Choo | MeelGroup</title>
    <link>https://meelgroup.github.io/author/davin-choo/</link>
      <atom:link href="https://meelgroup.github.io/author/davin-choo/index.xml" rel="self" type="application/rss+xml" />
    <description>Davin Choo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019</copyright><lastBuildDate>Fri, 01 Feb 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://meelgroup.github.io/images/icon_hu1dd832c4da814f17fe02e3737f0ae144_14882_512x512_fill_lanczos_center_2.png</url>
      <title>Davin Choo</title>
      <link>https://meelgroup.github.io/author/davin-choo/</link>
    </image>
    
    <item>
      <title>BOSPHORUS: Bridging ANF and CNF Solvers </title>
      <link>https://meelgroup.github.io/publication/date_cscm19/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://meelgroup.github.io/publication/date_cscm19/</guid>
      <description>&lt;p&gt;Algebraic Normal Form (ANF) and Conjunctive Normal Form (CNF) are commonly used to encode problems in Boolean algebra. ANFs are typically solved via Gröbner basis algorithms, often using more memory than is feasible; while CNFs are solved using SAT solvers, which cannot exploit the algebra of polynomials naturally. We propose a paradigm that bridges between ANF and CNF solving techniques: the techniques are applied in an iterative manner to learn facts to augment the original problems. Experiments on over 1,100 benchmarks arising from four different applications domains demonstrate that learnt facts can significantly improve runtime and enable more benchmarks to be solved.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
